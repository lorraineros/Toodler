{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Toolbar = function Toolbar(_ref) {\n  var hasSelected = _ref.hasSelected,\n    onAdd = _ref.onAdd,\n    onEdit = _ref.onEdit,\n    onRemov = _ref.onRemov,\n    isTaskToolbar = _ref.isTaskToolbar;\n  return _jsxs(View, {\n    styleName: \"horizontal\",\n    style: isTaskToolbar ? styles.taskToolbar : styles.toolbar,\n    children: [_jsx(TouchableHighlight, {\n      style: styles.toolbarAction,\n      onPress: onAdd,\n      children: _jsx(Text, {\n        style: [styles.toolbarActionText, !hasSelected ? {\n          color: 'rgba(155, 155, 155, .5)'\n        } : {}],\n        children: \"Create\"\n      })\n    }), _jsx(TouchableHighlight, {\n      style: styles.toolbarAction,\n      onPress: onEdit,\n      disabled: !hasSelected,\n      children: _jsx(Text, {\n        style: [styles.toolbarActionText, !hasSelected ? {\n          color: 'rgba(155, 155, 155, .5)'\n        } : {}],\n        children: \"Modify\"\n      })\n    }), _jsx(TouchableHighlight, {\n      style: styles.toolbarAction,\n      onPress: onRemove,\n      disabled: !hasSelected,\n      children: _jsx(Text, {\n        style: [styles.toolbarActionText, !hasSelected ? {\n          color: 'rgba(155, 155, 155, .5)'\n        } : {}],\n        children: \"Delete\"\n      })\n    })]\n  });\n};\nToolbar.propTypes = {\n  hasSelected: PropTypes.bool.isRequired,\n  isTaskToolbar: PropTypes.bool.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nexport default Toolbar;","map":{"version":3,"names":["PropTypes","React","View","TouchableHighlight","Text","styles","jsx","_jsx","jsxs","_jsxs","Toolbar","_ref","hasSelected","onAdd","onEdit","onRemov","isTaskToolbar","styleName","style","taskToolbar","toolbar","children","toolbarAction","onPress","toolbarActionText","color","disabled","onRemove","propTypes","bool","isRequired","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/ToolBar/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { View, TouchableHighlight, Text } from 'react-native'\r\nimport styles from './styles'\r\n\r\nconst Toolbar = ({ hasSelected, onAdd, onEdit, onRemov, isTaskToolbar }) => {\r\n  return (\r\n    <View styleName=\"horizontal\" style={ isTaskToolbar ? styles.taskToolbar : styles.toolbar}>\r\n      <TouchableHighlight\r\n        style={styles.toolbarAction}\r\n        onPress={onAdd}>\r\n        <Text style={[styles.toolbarActionText, !hasSelected ? { color: 'rgba(155, 155, 155, .5)' } : {}]}>Create</Text>\r\n      </TouchableHighlight>\r\n      <TouchableHighlight\r\n        style={styles.toolbarAction}\r\n        onPress={onEdit}\r\n        disabled={!hasSelected}>\r\n        <Text style={[styles.toolbarActionText, !hasSelected ? { color: 'rgba(155, 155, 155, .5)' } : {}]}>Modify</Text>\r\n      </TouchableHighlight>\r\n      <TouchableHighlight\r\n        style={styles.toolbarAction}\r\n        onPress={onRemove}\r\n        disabled={!hasSelected}>\r\n        <Text style={[styles.toolbarActionText, !hasSelected ? { color: 'rgba(155, 155, 155, .5)' } : {}]}>Delete</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  )\r\n}\r\n\r\nToolbar.propTypes = {\r\n  hasSelected: PropTypes.bool.isRequired,\r\n  isTaskToolbar: PropTypes.bool.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toolbar\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,IAAA;AAEzB,OAAOC,MAAM;AAAgB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAA+D;EAAA,IAAzDC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,IAAA,CAANG,MAAM;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,aAAa,GAAAL,IAAA,CAAbK,aAAa;EACnE,OACEP,KAAA,CAACP,IAAI;IAACe,SAAS,EAAC,YAAY;IAACC,KAAK,EAAGF,aAAa,GAAGX,MAAM,CAACc,WAAW,GAAGd,MAAM,CAACe,OAAQ;IAAAC,QAAA,GACvFd,IAAA,CAACJ,kBAAkB;MACjBe,KAAK,EAAEb,MAAM,CAACiB,aAAc;MAC5BC,OAAO,EAAEV,KAAM;MAAAQ,QAAA,EACfd,IAAA,CAACH,IAAI;QAACc,KAAK,EAAE,CAACb,MAAM,CAACmB,iBAAiB,EAAE,CAACZ,WAAW,GAAG;UAAEa,KAAK,EAAE;QAA0B,CAAC,GAAG,CAAC,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CAC9F,CAAC,EACrBd,IAAA,CAACJ,kBAAkB;MACjBe,KAAK,EAAEb,MAAM,CAACiB,aAAc;MAC5BC,OAAO,EAAET,MAAO;MAChBY,QAAQ,EAAE,CAACd,WAAY;MAAAS,QAAA,EACvBd,IAAA,CAACH,IAAI;QAACc,KAAK,EAAE,CAACb,MAAM,CAACmB,iBAAiB,EAAE,CAACZ,WAAW,GAAG;UAAEa,KAAK,EAAE;QAA0B,CAAC,GAAG,CAAC,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CAC9F,CAAC,EACrBd,IAAA,CAACJ,kBAAkB;MACjBe,KAAK,EAAEb,MAAM,CAACiB,aAAc;MAC5BC,OAAO,EAAEI,QAAS;MAClBD,QAAQ,EAAE,CAACd,WAAY;MAAAS,QAAA,EACvBd,IAAA,CAACH,IAAI;QAACc,KAAK,EAAE,CAACb,MAAM,CAACmB,iBAAiB,EAAE,CAACZ,WAAW,GAAG;UAAEa,KAAK,EAAE;QAA0B,CAAC,GAAG,CAAC,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CAC9F,CAAC;EAAA,CACjB,CAAC;AAEX,CAAC;AAEDX,OAAO,CAACkB,SAAS,GAAG;EAClBhB,WAAW,EAAEZ,SAAS,CAAC6B,IAAI,CAACC,UAAU;EACtCd,aAAa,EAAEhB,SAAS,CAAC6B,IAAI,CAACC,UAAU;EACxCjB,KAAK,EAAEb,SAAS,CAAC+B,IAAI,CAACD,UAAU;EAChChB,MAAM,EAAEd,SAAS,CAAC+B,IAAI,CAACD,UAAU;EACjCH,QAAQ,EAAE3B,SAAS,CAAC+B,IAAI,CAACD;AAC3B,CAAC;AAED,eAAepB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}