{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Checkbox from 'expo-checkbox';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./styles\";\nimport Modal from \"../Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AddTaskModal = function AddTaskModal(_ref) {\n  var isOpen = _ref.isOpen,\n    defaultTask = _ref.defaultTask,\n    submitModal = _ref.submitModal,\n    closeModal = _ref.closeModal;\n  var _useState = useState((defaultTask == null ? void 0 : defaultTask.name) || ''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState((defaultTask == null ? void 0 : defaultTask.description) || ''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState((defaultTask == null ? void 0 : defaultTask.isFinished) || false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFinished = _useState6[0],\n    setIsFinished = _useState6[1];\n  var _useState7 = useState((defaultTask == null ? void 0 : defaultTask.listId) || 0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    listId = _useState8[0],\n    setListId = _useState8[1];\n  useEffect(function () {\n    if (defaultTask) {\n      setName(defaultTask.name || '');\n      setDescription(defaultTask.description || '');\n      setIsFinished(defaultTask.isFinished || false);\n      setListId(defaultTask.listId || 0);\n    } else {\n      setName('');\n      setDescription('');\n      setIsFinished(false);\n      setListId('');\n    }\n  }, [defaultTask]);\n  return _jsx(Modal, {\n    isOpen: isOpen,\n    closeModal: closeModal,\n    children: _jsxs(View, {\n      children: [_jsxs(Text, {\n        style: styles.title,\n        children: [\" \", defaultTask ? 'Edit task' : 'Create new task', \" \"]\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Name \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Description \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), defaultTask && _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.checkboxContainer,\n          children: [_jsx(Text, {\n            style: styles.paragraph,\n            children: \"Finished?\"\n          }), _jsx(Checkbox, {\n            style: styles.checkbox,\n            value: isFinished,\n            onValueChange: setIsFinished\n          })]\n        }), _jsx(Text, {\n          style: styles.paragraph,\n          children: \"List ID\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          autoFocus: true,\n          label: \"List ID\",\n          value: listId.toString(),\n          onChangeText: function onChangeText(text) {\n            return setListId(parseInt(text, 10) || 0);\n          }\n        })]\n      }), _jsxs(View, {\n        styleName: \"horizontal\",\n        style: styles.toolbar,\n        children: [_jsx(TouchableHighlight, {\n          style: styles.cancelButton,\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return submitModal(name, description, isFinished, listId);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })\n  });\n};\nAddTaskModal.propTypes = {\n  defaultTask: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    isFinished: PropTypes.bool.isRequired,\n    listId: PropTypes.number.isRequired\n  }),\n  isOpen: PropTypes.bool.isRequired,\n  submitModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired\n};\nexport default AddTaskModal;","map":{"version":3,"names":["Checkbox","PropTypes","React","useEffect","useState","styles","Modal","Text","TextInput","TouchableHighlight","View","jsxs","_jsxs","jsx","_jsx","AddTaskModal","_ref","isOpen","defaultTask","submitModal","closeModal","_useState","name","_useState2","_slicedToArray","setName","_useState3","description","_useState4","setDescription","_useState5","isFinished","_useState6","setIsFinished","_useState7","listId","_useState8","setListId","children","style","title","paragraph","textInput","autoFocus","label","value","onChangeText","text","checkboxContainer","checkbox","onValueChange","toString","parseInt","styleName","toolbar","cancelButton","onPress","buttonText","submitButton","propTypes","shape","string","isRequired","bool","number","func"],"sources":["C:/Users/annar/OneDrive/HR/2023-2/3ja vikna/Toodler/src/components/AddTaskModal/index.js"],"sourcesContent":["import Checkbox from 'expo-checkbox'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport styles from './styles'\r\nimport Modal from '../Modal'\r\nimport { Text, TextInput, TouchableHighlight, View } from 'react-native'\r\n\r\nconst AddTaskModal = ({\r\n  isOpen,\r\n  defaultTask,\r\n  submitModal,\r\n  closeModal\r\n}) => {\r\n  const [name, setName] = useState(defaultTask?.name || '')\r\n  const [description, setDescription] = useState(defaultTask?.description || '')\r\n  const [isFinished, setIsFinished] = useState(defaultTask?.isFinished || false)\r\n  const [listId, setListId] = useState(defaultTask?.listId || 0)\r\n\r\n  useEffect(() => {\r\n    if (defaultTask) {\r\n      setName(defaultTask.name || '')\r\n      setDescription(defaultTask.description || '')\r\n      setIsFinished(defaultTask.isFinished || false)\r\n      setListId(defaultTask.listId || 0)\r\n    } else {\r\n      setName('')\r\n      setDescription('')\r\n      setIsFinished(false)\r\n      setListId('')\r\n    }\r\n  }, [defaultTask])\r\n\r\n  return (\r\n   <Modal\r\n   isOpen={isOpen}\r\n   closeModal={closeModal}>\r\n   <View>\r\n       <Text style={ styles.title }> {defaultTask ? 'Edit task' : 'Create new task'} </Text>\r\n       <Text style= { styles.paragraph }> Name </Text>\r\n       <TextInput\r\n         style= {styles.textInput }\r\n         autoFocus\r\n         label=\"Name\"\r\n         value={name}\r\n         onChangeText={text => setName(text)}\r\n       />\r\n       <Text style= { styles.paragraph }> Description </Text>\r\n       <TextInput\r\n         style= {styles.textInput }\r\n         autoFocus\r\n         label=\"Description\"\r\n         value={description}\r\n         onChangeText={text => setDescription(text)}\r\n       />\r\n       {defaultTask && (\r\n        <View>\r\n          <View style={styles.checkboxContainer}>\r\n            <Text style={styles.paragraph}>Finished?</Text>\r\n            <Checkbox\r\n              style={styles.checkbox}\r\n              value={isFinished}\r\n              onValueChange={setIsFinished}\r\n            />\r\n          </View>\r\n          <Text style={styles.paragraph}>List ID</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            autoFocus\r\n            label=\"List ID\"\r\n            value={listId.toString()}\r\n            onChangeText={(text) => setListId(parseInt(text, 10) || 0)}\r\n          />\r\n        </View>\r\n       )}\r\n       <View styleName=\"horizontal\" style={styles.toolbar}>\r\n         <TouchableHighlight style={ styles.cancelButton } onPress={closeModal}>\r\n           <Text style={ styles.buttonText }>Cancel</Text>\r\n         </TouchableHighlight>\r\n         <TouchableHighlight style={ styles.submitButton } onPress={() => submitModal(name, description, isFinished, listId)}>\r\n            <Text style={ styles.buttonText }>Confirm</Text>\r\n          </TouchableHighlight>\r\n       </View>\r\n     </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nAddTaskModal.propTypes = {\r\n  defaultTask: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    isFinished: PropTypes.bool.isRequired,\r\n    listId: PropTypes.number.isRequired\r\n  }),\r\n  isOpen: PropTypes.bool.isRequired,\r\n  submitModal: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTaskModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}