{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport Modal from \"../Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AddListModal = function AddListModal(_ref) {\n  var isOpen = _ref.isOpen,\n    defaultList = _ref.defaultList,\n    submitModal = _ref.submitModal,\n    closeModal = _ref.closeModal;\n  var _useState = useState(defaultList == null ? void 0 : defaultList.name),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(defaultList == null ? void 0 : defaultList.color),\n    _useState4 = _slicedToArray(_useState3, 2),\n    color = _useState4[0],\n    setColor = _useState4[1];\n  var _useState5 = useState(defaultList == null ? void 0 : defaultList.boardId),\n    _useState6 = _slicedToArray(_useState5, 2),\n    boardId = _useState6[0],\n    setBoardId = _useState6[1];\n  return _jsx(Modal, {\n    isOpen: isOpen,\n    closeModal: closeModal,\n    children: _jsxs(View, {\n      children: [_jsxs(Text, {\n        style: styles.title,\n        children: [\" \", defaultList ? 'Edit list' : 'Create new list', \" \"]\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \"Name\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \"Color\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Color\",\n        value: color,\n        onChangeText: function onChangeText(text) {\n          return setColor(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Board Id \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"BoardId\",\n        value: boardId,\n        onChangeText: function onChangeText(text) {\n          return setBoardId(text);\n        }\n      }), _jsxs(View, {\n        styleName: \"horizontal\",\n        style: styles.toolbar,\n        children: [_jsx(TouchableHighlight, {\n          style: styles.cancelButton,\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.submitButton,\n          onPress: submitModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })\n  });\n};\nAddListModal.propTypes = {\n  defaultList: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    boardId: PropTypes.number.isRequired\n  }),\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  submitModal: PropTypes.func.isRequired\n};\nexport default AddListModal;","map":{"version":3,"names":["PropTypes","React","useState","styles","Modal","Text","TextInput","TouchableHighlight","View","jsxs","_jsxs","jsx","_jsx","AddListModal","_ref","isOpen","defaultList","submitModal","closeModal","_useState","name","_useState2","_slicedToArray","setName","_useState3","color","_useState4","setColor","_useState5","boardId","_useState6","setBoardId","children","style","title","paragraph","textInput","autoFocus","label","value","onChangeText","text","styleName","toolbar","cancelButton","onPress","buttonText","submitButton","propTypes","shape","string","isRequired","number","bool","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/AddListModal/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport Modal from '../Modal'\r\nimport { Text, TextInput, TouchableHighlight, View } from 'react-native'\r\n\r\nconst AddListModal = ({\r\n  isOpen,\r\n  defaultList,\r\n  submitModal,\r\n  closeModal\r\n}) => {\r\n  \r\n  const [name, setName] = useState(defaultList?.name)\r\n  const [color, setColor] = useState(defaultList?.color)\r\n  const [boardId, setBoardId] = useState(defaultList?.boardId)\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      closeModal={closeModal}>\r\n        <View>\r\n          <Text style={ styles.title }> {defaultList ? 'Edit list' : 'Create new list'} </Text>\r\n          <Text style={ styles.paragraph }>Name</Text>\r\n          <TextInput\r\n          style={ styles.textInput }\r\n          autoFocus\r\n          label=\"Name\"\r\n          value={name}\r\n          onChangeText={text => setName(text)}\r\n          />\r\n          <Text style={ styles.paragraph }>Color</Text>\r\n          <TextInput\r\n          style={ styles.textInput }\r\n          autoFocus\r\n          label=\"Color\"\r\n          value={color}\r\n          onChangeText={text => setColor(text)}\r\n          />\r\n          <Text style= { styles.paragraph }> Board Id </Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            autoFocus\r\n            label=\"BoardId\"\r\n            value={boardId}\r\n            onChangeText={text => setBoardId(text)}\r\n          />\r\n          <View styleName=\"horizontal\" style={styles.toolbar}>\r\n            <TouchableHighlight style={ styles.cancelButton } onPress={closeModal}>\r\n            <Text style={ styles.buttonText }>Cancel</Text>\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={ styles.submitButton } onPress={submitModal}>\r\n              <Text style={ styles.buttonText }>Confirm</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nAddListModal.propTypes = {\r\n  defaultList: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    boardId: PropTypes.number.isRequired\r\n  }),\r\n  isOpen: PropTypes.bool.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  submitModal: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddListModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}