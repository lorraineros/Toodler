{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from \"./styles\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Board = function Board(_ref) {\n  var id = _ref.id,\n    name = _ref.name,\n    thumbnailPhoto = _ref.thumbnailPhoto,\n    description = _ref.description,\n    lists = _ref.lists,\n    boardName = _ref.boardName,\n    selectBoard = _ref.selectBoard,\n    navigate = _ref.navigate;\n  var boardList = lists ? lists.filter(function (l) {\n    return l.boardId === id;\n  }) : [];\n  console.log('ss', hasSelected);\n  return _jsxs(View, {\n    style: hasSelected ? styles.selected : styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: name\n    }), _jsx(Text, {\n      style: styles.paragraph,\n      children: description || name\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectBoard(name);\n      },\n      children: _jsx(Image, {\n        style: styles.image,\n        resizeMode: \"cover\",\n        source: {\n          uri: thumbnailPhoto\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        navigate('BoardDetail', {\n          boardList: boardList,\n          navigate: navigate\n        });\n      },\n      children: _jsx(Text, {\n        children: \"More Detail...\"\n      })\n    })]\n  });\n};\nBoard.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  thumbnailPhoto: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  lists: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    boardId: PropTypes.number\n  })).isRequired,\n  hasSelected: PropTypes.bool.isRequired,\n  selectBoard: PropTypes.func.isRequired,\n  navigate: PropTypes.func.isRequired\n};\nexport default Board;","map":{"version":3,"names":["PropTypes","React","styles","Image","Text","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","Board","_ref","id","name","thumbnailPhoto","description","lists","boardName","selectBoard","navigate","boardList","filter","l","boardId","console","log","hasSelected","style","selected","container","children","title","paragraph","onPress","image","resizeMode","source","uri","button","propTypes","number","isRequired","string","arrayOf","shape","color","bool","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/Board/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport styles from './styles'\r\nimport { Image, Text, TouchableOpacity, View } from 'react-native'\r\n\r\nconst Board = ({\r\n  id,\r\n  name,\r\n  thumbnailPhoto,\r\n  description,\r\n  lists,\r\n  boardName,\r\n  selectBoard,\r\n  navigate\r\n}) => {\r\n  const boardList = lists ? lists.filter(l => l.boardId === id) : []\r\n  console.log('ss', hasSelected)\r\n  return (\r\n    <View style={ hasSelected ? styles.selected : styles.container }>\r\n      <Text style={ styles.title }>\r\n        { name }\r\n      </Text>\r\n      <Text style={ styles.paragraph }>\r\n        { description || name }\r\n      </Text>\r\n      <TouchableOpacity\r\n        onPress={() => selectBoard(name)}>\r\n        <Image\r\n          style={ styles.image }\r\n          resizeMode='cover'\r\n          source={{ uri: thumbnailPhoto }}/>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={ styles.button }\r\n        onPress={() => { navigate('BoardDetail', { boardList, navigate }) }}>\r\n        <Text>\r\n          More Detail...\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nBoard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  thumbnailPhoto: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  lists: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n    boardId: PropTypes.number\r\n  })).isRequired,\r\n  hasSelected: PropTypes.bool.isRequired,\r\n  selectBoard: PropTypes.func.isRequired,\r\n  navigate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Board\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}