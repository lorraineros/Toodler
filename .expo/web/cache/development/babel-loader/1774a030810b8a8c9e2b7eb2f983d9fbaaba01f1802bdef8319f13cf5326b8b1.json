{"ast":null,"code":"import data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport { BoardList } from \"../../components/BoardList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(BoardList, {\n      navigate: navigate,\n      boards: data.boards\n    })\n  });\n};\nvar createBoard = function createBoard() {\n  var newBoard = {\n    id: data.boards.length + 1,\n    title: 'New Board',\n    lists: []\n  };\n  setBoards([newBoard]);\n};\nvar deleteBoard = function deleteBoard(boardID) {\n  var updateBoards = boards.filter(function (board) {\n    return board.id !== boardId;\n  });\n  setBoards(updateBoards);\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","View","styles","BoardList","jsx","_jsx","Main","_ref","navigate","navigation","style","container","children","boards","createBoard","newBoard","id","length","title","lists","setBoards","deleteBoard","boardID","updateBoards","filter","board","boardId","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from './styles'\r\nimport { BoardList } from '../../components/BoardList'\r\n\r\nconst Main = ({ navigation: { navigate } }) => (\r\n  <View style={styles.container}>\r\n    <BoardList navigate={navigate} boards={data.boards}></BoardList>\r\n  </View>\r\n)\r\n\r\nconst createBoard = () => {\r\n  const newBoard = {\r\n    id: data.boards.length + 1,\r\n    title: 'New Board',\r\n    lists: []\r\n  };\r\n  setBoards([newBoard])\r\n};\r\n\r\nconst deleteBoard = (boardID) => {\r\n  const updateBoards = boards.filter((board) => board.id !== boardId);\r\n  setBoards(updateBoards);\r\n};\r\n\r\n\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\n\r\nexport default Main\r\n"],"mappings":"AAAA,OAAOA,IAAI;AACX,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAEzB,OAAOC,MAAM;AACb,SAASC,SAAS;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAEtD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA;EAAA,IAAoBC,QAAQ,GAAAD,IAAA,CAAtBE,UAAU,CAAID,QAAQ;EAAA,OACpCH,IAAA,CAACJ,IAAI;IAACS,KAAK,EAAER,MAAM,CAACS,SAAU;IAAAC,QAAA,EAC5BP,IAAA,CAACF,SAAS;MAACK,QAAQ,EAAEA,QAAS;MAACK,MAAM,EAAEf,IAAI,CAACe;IAAO,CAAY;EAAC,CAC5D,CAAC;AAAA,CACR;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAMC,QAAQ,GAAG;IACfC,EAAE,EAAElB,IAAI,CAACe,MAAM,CAACI,MAAM,GAAG,CAAC;IAC1BC,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,CAAC,CAACL,QAAQ,CAAC,CAAC;AACvB,CAAC;AAED,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAK;EAC/B,IAAMC,YAAY,GAAGV,MAAM,CAACW,MAAM,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACT,EAAE,KAAKU,OAAO;EAAA,EAAC;EACnEN,SAAS,CAACG,YAAY,CAAC;AACzB,CAAC;AAIDjB,IAAI,CAACqB,SAAS,GAAG;EACflB,UAAU,EAAEV,SAAS,CAAC6B,KAAK,CAAC;IAC1BpB,QAAQ,EAAET,SAAS,CAAC8B,IAAI,CAACC;EAC3B,CAAC,CAAC,CAACA;AACL,CAAC;AAGD,eAAexB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}