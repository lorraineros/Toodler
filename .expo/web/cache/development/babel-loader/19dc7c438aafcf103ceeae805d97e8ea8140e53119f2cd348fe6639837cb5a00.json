{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport List from \"../../components/List\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddListModal from \"../../components/AddListModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BoardDetail = function BoardDetail(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    boardList = _route$params.boardList,\n    navigate = _route$params.navigate;\n  var _useState = useState(data.lists),\n    _useState2 = _slicedToArray(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedList = _useState4[0],\n    setSelectedList = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listName = _useState6[0],\n    setListName = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isCreateMode = _useState10[0],\n    setIsCreateMode = _useState10[1];\n  var onEdit = function onEdit() {\n    if (selectedList) {\n      setIsAddModalOpen(true);\n      var id = selectedList.id,\n        name = selectedList.name,\n        color = selectedList.color,\n        boardId = selectedList.boardId;\n      console.log('id ', id, name, color, boardId);\n      editList(id, name, color, boardId);\n    }\n  };\n  var editList = function editList(id, name, color, boardId) {\n    var updatedLists = lists.map(function (list) {\n      return list.id === id ? _objectSpread(_objectSpread({}, list), {}, {\n        name: name,\n        color: color,\n        boardId: boardId\n      }) : list;\n    });\n    setLists(updatedLists);\n    setSelectedList([]);\n  };\n  var deleteList = function deleteList(listId) {\n    var updatedLists = lists.filter(function (list) {\n      return list.id !== listId;\n    });\n    setLists(updatedLists);\n  };\n  var selectList = function selectList(name) {\n    var list = data.lists.find(function (l) {\n      return l.name === name;\n    });\n    setSelectedList(list);\n    setListName(name);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: boardList.map(function (t) {\n      return _jsx(List, _objectSpread(_objectSpread({}, t), {}, {\n        tasks: data.tasks,\n        navigate: navigate,\n        selectList: selectList,\n        listName: listName\n      }), t.id);\n    })\n  });\n};\nBoardDetail.navigationOptions = function (_) {\n  return {\n    title: 'BoardDetail'\n  };\n};\nBoardDetail.propTypes = {\n  route: PropTypes.object.isRequired\n};\nexport default BoardDetail;","map":{"version":3,"names":["data","PropTypes","React","useState","styles","List","View","Toolbar","AddListModal","jsx","_jsx","BoardDetail","_ref","route","_route$params","params","boardList","navigate","_useState","lists","_useState2","_slicedToArray","setLists","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","listName","setListName","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","_useState9","_useState10","isCreateMode","setIsCreateMode","onEdit","id","name","color","boardId","console","log","editList","updatedLists","map","list","_objectSpread","deleteList","listId","filter","selectList","find","l","style","container","children","t","tasks","navigationOptions","_","title","propTypes","object","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/BoardView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport List from '../../components/List'\r\nimport { View } from 'react-native'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddListModal from '../../components/AddListModal'\r\n\r\nconst BoardDetail = ({ route }) => {\r\n  const { boardList, navigate } = route.params\r\n  const [lists, setLists] = useState(data.lists)\r\n  const [selectedList, setSelectedList] = useState([])\r\n  const [listName, setListName] = useState('')\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n  const [isCreateMode, setIsCreateMode] = useState(true)\r\n\r\n  const onEdit = () => {\r\n    if (selectedList) {\r\n      setIsAddModalOpen(true)\r\n      const { id, name, color, boardId } = selectedList\r\n      console.log('id ', id, name, color, boardId)\r\n      editList(id, name, color, boardId)\r\n    }\r\n  }\r\n\r\n  const editList = (id, name, color, boardId) => {\r\n    const updatedLists = lists.map((list) =>\r\n      list.id === id ? { ...list, name, color, boardId } : list\r\n    )\r\n    setLists(updatedLists)\r\n    setSelectedList([])\r\n  }\r\n\r\n  const deleteList = (listId) => {\r\n    // Delete list logic\r\n    const updatedLists = lists.filter((list) => list.id !== listId)\r\n    setLists(updatedLists)\r\n  }\r\n\r\n  const selectList = name => {\r\n    const list = data.lists.find(l => l.name === name)\r\n    setSelectedList(list)\r\n    setListName(name)\r\n  }\r\n\r\n  return (\r\n    <View style={ styles.container }>\r\n      {boardList.map(t => <List key={t.id} {...t} tasks={data.tasks} navigate={navigate} selectList={selectList} listName={listName}/>)}\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardDetail.navigationOptions = _ => ({\r\n  title: 'BoardDetail'\r\n})\r\n\r\nBoardDetail.propTypes = {\r\n  route: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BoardDetail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}