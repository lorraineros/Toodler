{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport BoardList from \"../../components/BoardList\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddBoardModal from \"../../components/AddBoardModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  var _useState = useState(data.boards),\n    _useState2 = _slicedToArray(_useState, 2),\n    boards = _useState2[0],\n    setBoards = _useState2[1];\n  var deleteBoard = function deleteBoard(boardId) {\n    var updatedBoards = boards.filter(function (board) {\n      return board.id !== boardId;\n    });\n    setBoards(updatedBoards);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(BoardList, {\n      navigate: navigate,\n      boards: boards,\n      deleteBoard: deleteBoard\n    })\n  });\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","useState","View","styles","BoardList","Toolbar","AddBoardModal","jsx","_jsx","Main","_ref","navigate","navigation","_useState","boards","_useState2","_slicedToArray","setBoards","deleteBoard","boardId","updatedBoards","filter","board","id","style","container","children","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from './styles'\r\nimport BoardList from '../../components/BoardList'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddBoardModal from '../../components/AddBoardModal'\r\n\r\nconst Main = ({ navigation: { navigate } }) => {\r\n  const [boards, setBoards] = useState(data.boards)\r\n  const deleteBoard = (boardId) => {\r\n    // Delete board logic\r\n    const updatedBoards = boards.filter((board) => board.id !== boardId)\r\n    setBoards(updatedBoards)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BoardList navigate={navigate} boards={boards} deleteBoard={deleteBoard}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";AAAA,OAAOA,IAAI;AACX,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,IAAA;AAEvC,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,OAAOC,aAAa;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAE1D,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAqC;EAAA,IAAjBC,QAAQ,GAAAD,IAAA,CAAtBE,UAAU,CAAID,QAAQ;EACpC,IAAAE,SAAA,GAA4BZ,QAAQ,CAACH,IAAI,CAACgB,MAAM,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA1CC,MAAM,GAAAC,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAK;IAE/B,IAAMC,aAAa,GAAGN,MAAM,CAACO,MAAM,CAAC,UAACC,KAAK;MAAA,OAAKA,KAAK,CAACC,EAAE,KAAKJ,OAAO;IAAA,EAAC;IACpEF,SAAS,CAACG,aAAa,CAAC;EAC1B,CAAC;EAED,OACEZ,IAAA,CAACN,IAAI;IAACsB,KAAK,EAAErB,MAAM,CAACsB,SAAU;IAAAC,QAAA,EAC5BlB,IAAA,CAACJ,SAAS;MAACO,QAAQ,EAAEA,QAAS;MAACG,MAAM,EAAEA,MAAO;MAACI,WAAW,EAAEA;IAAY,CAAC;EAAC,CACtE,CAAC;AAEX,CAAC;AAEDT,IAAI,CAACkB,SAAS,GAAG;EACff,UAAU,EAAEb,SAAS,CAAC6B,KAAK,CAAC;IAC1BjB,QAAQ,EAAEZ,SAAS,CAAC8B,IAAI,CAACC;EAC3B,CAAC,CAAC,CAACA;AACL,CAAC;AAED,eAAerB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}