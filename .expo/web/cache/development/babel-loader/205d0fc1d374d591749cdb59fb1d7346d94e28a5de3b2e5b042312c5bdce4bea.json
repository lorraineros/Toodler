{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Board from \"../Board\";\nimport Toolbar from \"../ToolBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardList = function BoardList(_ref) {\n  var boards = _ref.boards,\n    navigate = _ref.navigate;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedBoard = _useState2[0],\n    setSelectedBoard = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    boardName = _useState4[0],\n    setBoardName = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loadingBoard = _useState6[0],\n    setLoadingBoard = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var addBoard = function addBoard(name, description, thumbnailPhoto) {\n    var id = Math.max.apply(Math, _toConsumableArray(boards.map(function (b) {\n      return b.id;\n    }))) + 1;\n    var updatedBoards = [].concat(_toConsumableArray(boards), [{\n      id: id,\n      name: name,\n      description: description,\n      thumbnailPhoto: thumbnailPhoto\n    }]);\n    console.log(updatedBoards);\n    setBoards(updatedBoards);\n  };\n  var selectBoard = function selectBoard(name) {\n    var board = data.boards.find(function (b) {\n      return b.name === name;\n    });\n    setSelectedBoard(board);\n    setBoardName(name);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: boardName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      }\n    }), _jsx(AddBoardModal, {\n      defaultBoard: boards,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      },\n      submitModal: addBoard\n    }), boards.map(function (b) {\n      return _jsx(Board, _objectSpread(_objectSpread({}, b), {}, {\n        lists: data.lists,\n        boardName: boardName,\n        selectBoard: selectBoard,\n        navigate: navigate\n      }), b.id);\n    })]\n  });\n};\nBoardList.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    thumbnailPhoto: PropTypes.string\n  })).isRequired,\n  navigate: PropTypes.func.isRequired\n};\nexport default BoardList;","map":{"version":3,"names":["data","PropTypes","React","useState","styles","View","Board","Toolbar","jsx","_jsx","jsxs","_jsxs","BoardList","_ref","boards","navigate","_useState","_useState2","_slicedToArray","selectedBoard","setSelectedBoard","_useState3","_useState4","boardName","setBoardName","_useState5","_useState6","loadingBoard","setLoadingBoard","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","addBoard","name","description","thumbnailPhoto","id","Math","max","apply","_toConsumableArray","map","b","updatedBoards","concat","console","log","setBoards","selectBoard","board","find","style","container","children","hasSelected","onAdd","AddBoardModal","defaultBoard","isOpen","closeModal","submitModal","_objectSpread","lists","propTypes","arrayOf","shape","number","string","isRequired","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/BoardList/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport { View } from 'react-native'\r\nimport Board from '../Board'\r\nimport Toolbar from '../ToolBar'\r\n\r\nconst BoardList = ({\r\n  boards,\r\n  navigate\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState()\r\n  const [boardName, setBoardName] = useState('')\r\n  const [loadingBoard, setLoadingBoard] = useState(true)\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const addBoard = (name, description, thumbnailPhoto) => {\r\n    const id = Math.max(...boards.map(b => b.id)) + 1\r\n    const updatedBoards = [...boards, {\r\n      id,\r\n      name,\r\n      description,\r\n      thumbnailPhoto\r\n    }]\r\n    console.log(updatedBoards)\r\n    setBoards(updatedBoards)\r\n  }\r\n\r\n  const selectBoard = name => {\r\n    const board = data.boards.find(b => b.name === name)\r\n    setSelectedBoard(board)\r\n    setBoardName(name)\r\n  }\r\n\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Toolbar\r\n        hasSelected={boardName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)} />\r\n      <AddBoardModal\r\n        defaultBoard={boards}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}\r\n        submitModal={addBoard}/>\r\n      {boards.map(b => <Board key={b.id} {...b} lists={data.lists} boardName={boardName} selectBoard={selectBoard} navigate={navigate}/>)}\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardList.propTypes = {\r\n  boards: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    thumbnailPhoto: PropTypes.string\r\n  })).isRequired,\r\n  navigate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardList\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}