{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from \"./styles\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Task = function Task(_ref) {\n  var id = _ref.id,\n    name = _ref.name,\n    description = _ref.description,\n    isFinished = _ref.isFinished,\n    listId = _ref.listId,\n    select = _ref.select;\n  var titleStyle = isFinished ? styles.finishTitle : styles.unfinishTitle;\n  var paraStyle = isFinished ? styles.finishPara : styles.unfinishPara;\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      style: titleStyle,\n      children: [\"\\u2023\", \" \", name]\n    }), _jsx(Text, {\n      style: paraStyle,\n      children: description\n    })]\n  });\n};\nTask.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  isFinished: PropTypes.string,\n  listId: PropTypes.number\n};\nexport default Task;","map":{"version":3,"names":["PropTypes","React","styles","Text","View","jsxs","_jsxs","jsx","_jsx","Task","_ref","id","name","description","isFinished","listId","select","titleStyle","finishTitle","unfinishTitle","paraStyle","finishPara","unfinishPara","children","style","propTypes","number","string","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/Task/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport styles from './styles'\r\nimport { Text, View } from 'react-native'\r\n\r\nconst Task = ({\r\n  id,\r\n  name,\r\n  description,\r\n  isFinished,\r\n  listId,\r\n  select\r\n}) => {\r\n  const titleStyle = isFinished ? styles.finishTitle : styles.unfinishTitle\r\n  const paraStyle = isFinished ? styles.finishPara : styles.unfinishPara\r\n  return (\r\n    <View>\r\n      <Text style={ titleStyle }>\r\n        {'\\u2023'} { name }\r\n      </Text>\r\n      <Text style={ paraStyle }>\r\n        { description }\r\n      </Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nTask.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  isFinished: PropTypes.string,\r\n  listId: PropTypes.number\r\n}\r\n\r\nexport default Task\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AAAgB,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG7B,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAOJ;EAAA,IANJC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IACFC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IACXC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,MAAM,GAAAL,IAAA,CAANK,MAAM;IACNC,MAAM,GAAAN,IAAA,CAANM,MAAM;EAEN,IAAMC,UAAU,GAAGH,UAAU,GAAGZ,MAAM,CAACgB,WAAW,GAAGhB,MAAM,CAACiB,aAAa;EACzE,IAAMC,SAAS,GAAGN,UAAU,GAAGZ,MAAM,CAACmB,UAAU,GAAGnB,MAAM,CAACoB,YAAY;EACtE,OACEhB,KAAA,CAACF,IAAI;IAAAmB,QAAA,GACHjB,KAAA,CAACH,IAAI;MAACqB,KAAK,EAAGP,UAAY;MAAAM,QAAA,GACvB,QAAQ,EAAC,GAAC,EAAEX,IAAI;IAAA,CACb,CAAC,EACPJ,IAAA,CAACL,IAAI;MAACqB,KAAK,EAAGJ,SAAW;MAAAG,QAAA,EACrBV;IAAW,CACT,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAEDJ,IAAI,CAACgB,SAAS,GAAG;EACfd,EAAE,EAAEX,SAAS,CAAC0B,MAAM;EACpBd,IAAI,EAAEZ,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACjCf,WAAW,EAAEb,SAAS,CAAC2B,MAAM;EAC7Bb,UAAU,EAAEd,SAAS,CAAC2B,MAAM;EAC5BZ,MAAM,EAAEf,SAAS,CAAC0B;AACpB,CAAC;AAED,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}