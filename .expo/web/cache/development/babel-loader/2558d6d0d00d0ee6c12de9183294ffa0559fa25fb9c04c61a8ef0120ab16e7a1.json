{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport BoardList from \"../../components/BoardList\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddBoardModal from \"../../components/AddBoardModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  var _useState = useState(data.boards),\n    _useState2 = _slicedToArray(_useState, 2),\n    boards = _useState2[0],\n    setBoards = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedBoard = _useState4[0],\n    setSelectedBoard = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    boardName = _useState6[0],\n    setBoardName = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loadingBoard = _useState8[0],\n    setLoadingBoard = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isAddModalOpen = _useState10[0],\n    setIsAddModalOpen = _useState10[1];\n  var addBoard = function addBoard(name, description, thumbnailPhoto) {\n    var id = Math.max.apply(Math, _toConsumableArray(boards.map(function (b) {\n      return b.id;\n    }))) + 1;\n    var updatedBoards = [].concat(_toConsumableArray(boards), [{\n      id: id,\n      name: name,\n      description: description,\n      thumbnailPhoto: thumbnailPhoto\n    }]);\n    setBoards(updatedBoards);\n    setIsAddModalOpen(false);\n    console.log(boards);\n  };\n  var editBoard = function editBoard(id, name, description, thumbnailPhoto) {\n    if (selectedBoard) {\n      setBoards(function (prevBoard) {\n        console.log('updated', updatedBoard);\n        var updatedBoard = prevBoard.map(function (board) {\n          return board.id === id ? _objectSpread(_objectSpread({}, board), {}, {\n            name: name,\n            description: description,\n            thumbnailPhoto: thumbnailPhoto\n          }) : board;\n        });\n        console.log('updated', updatedBoard);\n        setBoards(updatedBoard);\n      });\n      setIsAddModalOpen(false);\n    }\n  };\n  var deleteBoard = function deleteBoard(boardId) {\n    var updatedBoards = boards.filter(function (board) {\n      return board.id !== boardId;\n    });\n    setBoards(updatedBoards);\n  };\n  var selectBoard = function selectBoard(name) {\n    var board = data.boards.find(function (b) {\n      return b.name === name;\n    });\n    setSelectedBoard(board);\n    setBoardName(name);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: boardName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      },\n      onEdit: function onEdit() {\n        return setIsAddModalOpen(true);\n      }\n    }), _jsx(AddBoardModal, {\n      defaultBoard: selectedBoard,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      },\n      submitModal: selectedBoard ? editBoard : addBoard\n    }), _jsx(BoardList, {\n      navigate: navigate,\n      boards: boards,\n      deleteBoard: deleteBoard,\n      selectBoard: selectBoard,\n      boardName: boardName\n    })]\n  });\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","useEffect","useState","View","styles","BoardList","Toolbar","AddBoardModal","jsx","_jsx","jsxs","_jsxs","Main","_ref","navigate","navigation","_useState","boards","_useState2","_slicedToArray","setBoards","_useState3","_useState4","selectedBoard","setSelectedBoard","_useState5","_useState6","boardName","setBoardName","_useState7","_useState8","loadingBoard","setLoadingBoard","_useState9","_useState10","isAddModalOpen","setIsAddModalOpen","addBoard","name","description","thumbnailPhoto","id","Math","max","apply","_toConsumableArray","map","b","updatedBoards","concat","console","log","editBoard","prevBoard","updatedBoard","board","_objectSpread","deleteBoard","boardId","filter","selectBoard","find","style","container","children","hasSelected","onAdd","onEdit","defaultBoard","isOpen","closeModal","submitModal","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from './styles'\r\nimport BoardList from '../../components/BoardList'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddBoardModal from '../../components/AddBoardModal'\r\n\r\nconst Main = ({ navigation: { navigate } }) => {\r\n  const [boards, setBoards] = useState(data.boards)\r\n  const [selectedBoard, setSelectedBoard] = useState()\r\n  const [boardName, setBoardName] = useState('')\r\n  const [loadingBoard, setLoadingBoard] = useState(true)\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const addBoard = (name, description, thumbnailPhoto) => {\r\n    const id = Math.max(...boards.map(b => b.id)) + 1\r\n    const updatedBoards = [...boards, {\r\n      id,\r\n      name,\r\n      description,\r\n      thumbnailPhoto\r\n    }]\r\n    setBoards(updatedBoards)\r\n    setIsAddModalOpen(false)\r\n    console.log(boards)\r\n  }\r\n\r\n  const editBoard = (id, name, description, thumbnailPhoto) => {\r\n    if (selectedBoard) {\r\n      setBoards((prevBoard) => {\r\n        console.log('updated', updatedBoard)\r\n        const updatedBoard = prevBoard.map((board) =>\r\n          board.id === id ? { ...board, name, description, thumbnailPhoto } : board\r\n        )\r\n        console.log('updated', updatedBoard)\r\n        setBoards(updatedBoard)\r\n      })\r\n      setIsAddModalOpen(false)\r\n    }\r\n  }\r\n\r\n  const deleteBoard = (boardId) => {\r\n    // Delete board logic\r\n    const updatedBoards = boards.filter((board) => board.id !== boardId)\r\n    setBoards(updatedBoards)\r\n  }\r\n\r\n  const selectBoard = name => {\r\n    const board = data.boards.find(b => b.name === name)\r\n    setSelectedBoard(board)\r\n    setBoardName(name)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Toolbar\r\n        hasSelected={boardName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)}\r\n        onEdit={() => setIsAddModalOpen(true)} />\r\n      <AddBoardModal\r\n        defaultBoard={selectedBoard}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}\r\n        submitModal={selectedBoard ? editBoard : addBoard}/>\r\n      <BoardList navigate={navigate} boards={boards} deleteBoard={deleteBoard} selectBoard={selectBoard} boardName={boardName}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}