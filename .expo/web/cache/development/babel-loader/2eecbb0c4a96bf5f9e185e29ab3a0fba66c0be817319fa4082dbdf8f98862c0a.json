{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport BoardList from \"../../components/BoardList\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddBoardModal from \"../../components/AddBoardModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  var _useState = useState(data.boards),\n    _useState2 = _slicedToArray(_useState, 2),\n    boards = _useState2[0],\n    setBoards = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedBoard = _useState4[0],\n    setSelectedBoard = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loadingBoard = _useState6[0],\n    setLoadingBoard = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var deleteBoard = function deleteBoard(boardId) {\n    var updatedBoards = boards.filter(function (board) {\n      return board.id !== boardId;\n    });\n    setBoards(updatedBoards);\n  };\n  var selectBoard = function selectBoard(name) {\n    console.log(name);\n    var board = data.boards.find(function (b) {\n      return b.name === name;\n    });\n    setSelectedBoard(board);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: selectedBoard !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      }\n    }), _jsx(AddBoardModal, {\n      defaultBoard: boards,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      }\n    }), _jsx(BoardList, {\n      navigate: navigate,\n      boards: boards,\n      deleteBoard: deleteBoard,\n      selectBoard: selectBoard,\n      hasSelected: selectedBoard !== ''\n    })]\n  });\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","useState","View","styles","BoardList","Toolbar","AddBoardModal","jsx","_jsx","jsxs","_jsxs","Main","_ref","navigate","navigation","_useState","boards","_useState2","_slicedToArray","setBoards","_useState3","_useState4","selectedBoard","setSelectedBoard","_useState5","_useState6","loadingBoard","setLoadingBoard","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","deleteBoard","boardId","updatedBoards","filter","board","id","selectBoard","name","console","log","find","b","style","container","children","hasSelected","onAdd","defaultBoard","isOpen","closeModal","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from './styles'\r\nimport BoardList from '../../components/BoardList'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddBoardModal from '../../components/AddBoardModal'\r\n\r\nconst Main = ({ navigation: { navigate } }) => {\r\n  const [boards, setBoards] = useState(data.boards)\r\n  const [selectedBoard, setSelectedBoard] = useState()\r\n  const [loadingBoard, setLoadingBoard] = useState(true)\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const deleteBoard = (boardId) => {\r\n    // Delete board logic\r\n    const updatedBoards = boards.filter((board) => board.id !== boardId)\r\n    setBoards(updatedBoards)\r\n  }\r\n\r\n  const selectBoard = name => {\r\n    console.log(name)\r\n    const board = data.boards.find(b => b.name === name)\r\n    setSelectedBoard(board)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Toolbar\r\n        hasSelected={selectedBoard !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)} />\r\n      <AddBoardModal\r\n        defaultBoard={boards}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}/>\r\n      <BoardList navigate={navigate} boards={boards} deleteBoard={deleteBoard} selectBoard={selectBoard} hasSelected={selectedBoard !== ''}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";AAAA,OAAOA,IAAI;AACX,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,IAAA;AAEvC,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,OAAOC,aAAa;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1D,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAqC;EAAA,IAAjBC,QAAQ,GAAAD,IAAA,CAAtBE,UAAU,CAAID,QAAQ;EACpC,IAAAE,SAAA,GAA4Bd,QAAQ,CAACH,IAAI,CAACkB,MAAM,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA1CC,MAAM,GAAAC,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA0CnB,QAAQ,CAAC,CAAC;IAAAoB,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAA7CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAwCvB,QAAQ,CAAC,IAAI,CAAC;IAAAwB,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA4C3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAK;IAE/B,IAAMC,aAAa,GAAGlB,MAAM,CAACmB,MAAM,CAAC,UAACC,KAAK;MAAA,OAAKA,KAAK,CAACC,EAAE,KAAKJ,OAAO;IAAA,EAAC;IACpEd,SAAS,CAACe,aAAa,CAAC;EAC1B,CAAC;EAED,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAGC,IAAI,EAAI;IAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAMH,KAAK,GAAGtC,IAAI,CAACkB,MAAM,CAAC0B,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACJ,IAAI,KAAKA,IAAI;IAAA,EAAC;IACpDhB,gBAAgB,CAACa,KAAK,CAAC;EACzB,CAAC;EAED,OACE1B,KAAA,CAACR,IAAI;IAAC0C,KAAK,EAAEzC,MAAM,CAAC0C,SAAU;IAAAC,QAAA,GAC5BtC,IAAA,CAACH,OAAO;MACN0C,WAAW,EAAEzB,aAAa,KAAK,EAAG;MAClC0B,KAAK,EAAE,SAAAA,MAAA;QAAA,OAAMjB,iBAAiB,CAAC,IAAI,CAAC;MAAA;IAAC,CAAE,CAAC,EAC1CvB,IAAA,CAACF,aAAa;MACZ2C,YAAY,EAAEjC,MAAO;MACrBkC,MAAM,EAAEpB,cAAe;MACvBqB,UAAU,EAAE,SAAAA,WAAA;QAAA,OAAMpB,iBAAiB,CAAC,KAAK,CAAC;MAAA;IAAC,CAAC,CAAC,EAC/CvB,IAAA,CAACJ,SAAS;MAACS,QAAQ,EAAEA,QAAS;MAACG,MAAM,EAAEA,MAAO;MAACgB,WAAW,EAAEA,WAAY;MAACM,WAAW,EAAEA,WAAY;MAACS,WAAW,EAAEzB,aAAa,KAAK;IAAG,CAAC,CAAC;EAAA,CACnI,CAAC;AAEX,CAAC;AAEDX,IAAI,CAACyC,SAAS,GAAG;EACftC,UAAU,EAAEf,SAAS,CAACsD,KAAK,CAAC;IAC1BxC,QAAQ,EAAEd,SAAS,CAACuD,IAAI,CAACC;EAC3B,CAAC,CAAC,CAACA;AACL,CAAC;AAED,eAAe5C,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}