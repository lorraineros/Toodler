{"ast":null,"code":"import data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport { BoardList } from \"../../components/BoardList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(BoardList, {\n      navigate: navigate,\n      boards: data.boards\n    })\n  });\n};\nvar createBoard = function createBoard() {\n  var newBoard = {\n    id: data.boards.length + 1,\n    title: 'New Board',\n    lists: []\n  };\n  setBoards([newBoard]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BoardList, {\n      navigate: navigate,\n      boards: boards,\n      deleteBoard: deleteBoard\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: createBoard,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Create New Board\"\n      })\n    })]\n  });\n};\nvar deleteBoard = function deleteBoard(boardID) {\n  var updateBoards = boards.filter(function (board) {\n    return board.id !== boardId;\n  });\n  setBoards(updateBoards);\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","View","styles","BoardList","jsx","_jsx","jsxs","_jsxs","Main","_ref","navigate","navigation","style","container","children","boards","createBoard","newBoard","id","length","title","lists","setBoards","deleteBoard","TouchableOpacity","button","onPress","Text","buttonText","boardID","updateBoards","filter","board","boardId","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { View } from 'react-native'\r\nimport styles from './styles'\r\nimport { BoardList } from '../../components/BoardList'\r\n\r\nconst Main = ({ navigation: { navigate } }) => (\r\n  <View style={styles.container}>\r\n    <BoardList navigate={navigate} boards={data.boards}></BoardList>\r\n  </View>\r\n)\r\n\r\nconst createBoard = () => {\r\n  const newBoard = {\r\n    id: data.boards.length + 1,\r\n    title: 'New Board',\r\n    lists: []\r\n  };\r\n  setBoards([newBoard])\r\nreturn (\r\n  <View style={styles.container}>\r\n    <BoardList navigate={navigate} boards={boards} deleteBoard={deleteBoard} />\r\n    <TouchableOpacity style={styles.button} onPress={createBoard}>\r\n      <Text style={styles.buttonText}>Create New Board</Text>\r\n    </TouchableOpacity>\r\n  </View>\r\n);\r\n};\r\n\r\nconst deleteBoard = (boardID) => {\r\n  const updateBoards = boards.filter((board) => board.id !== boardId);\r\n  setBoards(updateBoards);\r\n};\r\n\r\n\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\n\r\nexport default Main\r\n"],"mappings":"AAAA,OAAOA,IAAI;AACX,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAEzB,OAAOC,MAAM;AACb,SAASC,SAAS;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA;EAAA,IAAoBC,QAAQ,GAAAD,IAAA,CAAtBE,UAAU,CAAID,QAAQ;EAAA,OACpCL,IAAA,CAACJ,IAAI;IAACW,KAAK,EAAEV,MAAM,CAACW,SAAU;IAAAC,QAAA,EAC5BT,IAAA,CAACF,SAAS;MAACO,QAAQ,EAAEA,QAAS;MAACK,MAAM,EAAEjB,IAAI,CAACiB;IAAO,CAAY;EAAC,CAC5D,CAAC;AAAA,CACR;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAMC,QAAQ,GAAG;IACfC,EAAE,EAAEpB,IAAI,CAACiB,MAAM,CAACI,MAAM,GAAG,CAAC;IAC1BC,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,CAAC,CAACL,QAAQ,CAAC,CAAC;EACvB,OACEV,KAAA,CAACN,IAAI;IAACW,KAAK,EAAEV,MAAM,CAACW,SAAU;IAAAC,QAAA,GAC5BT,IAAA,CAACF,SAAS;MAACO,QAAQ,EAAEA,QAAS;MAACK,MAAM,EAAEA,MAAO;MAACQ,WAAW,EAAEA;IAAY,CAAE,CAAC,EAC3ElB,IAAA,CAACmB,gBAAgB;MAACZ,KAAK,EAAEV,MAAM,CAACuB,MAAO;MAACC,OAAO,EAAEV,WAAY;MAAAF,QAAA,EAC3DT,IAAA,CAACsB,IAAI;QAACf,KAAK,EAAEV,MAAM,CAAC0B,UAAW;QAAAd,QAAA,EAAC;MAAgB,CAAM;IAAC,CACvC,CAAC;EAAA,CACf,CAAC;AAET,CAAC;AAED,IAAMS,WAAW,GAAG,SAAdA,WAAWA,CAAIM,OAAO,EAAK;EAC/B,IAAMC,YAAY,GAAGf,MAAM,CAACgB,MAAM,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACd,EAAE,KAAKe,OAAO;EAAA,EAAC;EACnEX,SAAS,CAACQ,YAAY,CAAC;AACzB,CAAC;AAIDtB,IAAI,CAAC0B,SAAS,GAAG;EACfvB,UAAU,EAAEZ,SAAS,CAACoC,KAAK,CAAC;IAC1BzB,QAAQ,EAAEX,SAAS,CAACqC,IAAI,CAACC;EAC3B,CAAC,CAAC,CAACA;AACL,CAAC;AAGD,eAAe7B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}