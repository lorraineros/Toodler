{"ast":null,"code":"import AddModal from \"../AddModal\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from \"./styles\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Board = function Board(_ref) {\n  var id = _ref.id,\n    name = _ref.name,\n    thumbnailPhoto = _ref.thumbnailPhoto,\n    description = _ref.description,\n    lists = _ref.lists,\n    navigate = _ref.navigate;\n  var boardList = lists ? lists.filter(function (l) {\n    return l.boardId === id;\n  }) : [];\n  console.log('a', boardList);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: name\n    }), _jsx(Text, {\n      style: styles.paragraph,\n      children: description || name\n    }), _jsx(Image, {\n      style: styles.image,\n      resizeMode: \"cover\",\n      source: {\n        uri: thumbnailPhoto\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        navigate('BoardDetail', {\n          boardList: boardList,\n          navigate: navigate\n        });\n      },\n      children: _jsx(Text, {\n        children: \"More Detail...\"\n      })\n    })]\n  });\n};\nBoard.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  thumbnailPhoto: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  lists: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    boardId: PropTypes.number\n  })).isRequired,\n  navigate: PropTypes.func.isRequired\n};\nexport default Board;","map":{"version":3,"names":["AddModal","PropTypes","React","styles","Image","Text","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","Board","_ref","id","name","thumbnailPhoto","description","lists","navigate","boardList","filter","l","boardId","console","log","style","container","children","title","paragraph","image","resizeMode","source","uri","button","onPress","propTypes","number","isRequired","string","arrayOf","shape","color","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/Board/index.js"],"sourcesContent":["import AddModal from '../AddModal' \r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport styles from './styles'\r\nimport { Image, Text, TouchableOpacity, View } from 'react-native'\r\n\r\nconst Board = ({\r\n  id,\r\n  name,\r\n  thumbnailPhoto,\r\n  description,\r\n  lists,\r\n  navigate\r\n}) => {\r\n  const boardList = lists ? lists.filter(l => l.boardId === id) : []\r\n  console.log('a', boardList)\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Text style={ styles.title }>\r\n        { name }\r\n      </Text>\r\n      <Text style={ styles.paragraph }>\r\n        { description || name }\r\n      </Text>\r\n      <Image\r\n        style={ styles.image }\r\n        resizeMode='cover'\r\n        source={{ uri: thumbnailPhoto }}/>\r\n      <TouchableOpacity\r\n        style={ styles.button }\r\n        onPress={() => { navigate('BoardDetail', { boardList, navigate }) }}>\r\n        <Text>\r\n          More Detail...\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nBoard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  thumbnailPhoto: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  lists: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n    boardId: PropTypes.number\r\n  })).isRequired,\r\n  navigate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Board\r\n"],"mappings":"AAAA,OAAOA,QAAQ;AACf,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AAAgB,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG7B,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAOL;EAAA,IANJC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IACFC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IACdC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IACXC,KAAK,GAAAL,IAAA,CAALK,KAAK;IACLC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;EAER,IAAMC,SAAS,GAAGF,KAAK,GAAGA,KAAK,CAACG,MAAM,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,OAAO,KAAKT,EAAE;EAAA,EAAC,GAAG,EAAE;EAClEU,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEL,SAAS,CAAC;EAC3B,OACET,KAAA,CAACJ,IAAI;IAACmB,KAAK,EAAGvB,MAAM,CAACwB,SAAW;IAAAC,QAAA,GAC9BnB,IAAA,CAACJ,IAAI;MAACqB,KAAK,EAAGvB,MAAM,CAAC0B,KAAO;MAAAD,QAAA,EACxBb;IAAI,CACF,CAAC,EACPN,IAAA,CAACJ,IAAI;MAACqB,KAAK,EAAGvB,MAAM,CAAC2B,SAAW;MAAAF,QAAA,EAC5BX,WAAW,IAAIF;IAAI,CACjB,CAAC,EACPN,IAAA,CAACL,KAAK;MACJsB,KAAK,EAAGvB,MAAM,CAAC4B,KAAO;MACtBC,UAAU,EAAC,OAAO;MAClBC,MAAM,EAAE;QAAEC,GAAG,EAAElB;MAAe;IAAE,CAAC,CAAC,EACpCP,IAAA,CAACH,gBAAgB;MACfoB,KAAK,EAAGvB,MAAM,CAACgC,MAAQ;MACvBC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAAEjB,QAAQ,CAAC,aAAa,EAAE;UAAEC,SAAS,EAATA,SAAS;UAAED,QAAQ,EAARA;QAAS,CAAC,CAAC;MAAC,CAAE;MAAAS,QAAA,EACpEnB,IAAA,CAACJ,IAAI;QAAAuB,QAAA,EAAC;MAEN,CAAM;IAAC,CACS,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAEDhB,KAAK,CAACyB,SAAS,GAAG;EAChBvB,EAAE,EAAEb,SAAS,CAACqC,MAAM,CAACC,UAAU;EAC/BxB,IAAI,EAAEd,SAAS,CAACuC,MAAM,CAACD,UAAU;EACjCvB,cAAc,EAAEf,SAAS,CAACuC,MAAM,CAACD,UAAU;EAC3CtB,WAAW,EAAEhB,SAAS,CAACuC,MAAM;EAC7BtB,KAAK,EAAEjB,SAAS,CAACwC,OAAO,CAACxC,SAAS,CAACyC,KAAK,CAAC;IACvC5B,EAAE,EAAEb,SAAS,CAACqC,MAAM;IACpBvB,IAAI,EAAEd,SAAS,CAACuC,MAAM,CAACD,UAAU;IACjCI,KAAK,EAAE1C,SAAS,CAACuC,MAAM;IACvBjB,OAAO,EAAEtB,SAAS,CAACqC;EACrB,CAAC,CAAC,CAAC,CAACC,UAAU;EACdpB,QAAQ,EAAElB,SAAS,CAAC2C,IAAI,CAACL;AAC3B,CAAC;AAED,eAAe3B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}