{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport Task from \"../Task\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport Toolbar from \"../ToolBar\";\nimport AddTaskModal from \"../AddTaskModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar List = function List(_ref) {\n  var id = _ref.id,\n    name = _ref.name,\n    color = _ref.color,\n    boardId = _ref.boardId,\n    listName = _ref.listName,\n    selectList = _ref.selectList,\n    tasks = _ref.tasks,\n    deleteList = _ref.deleteList;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    taskName = _useState2[0],\n    setTaskName = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTask = _useState4[0],\n    setSelectedTask = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAddModalOpen = _useState6[0],\n    setIsAddModalOpen = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isDeleteList = _useState8[0],\n    setIsDeleteList = _useState8[1];\n  var _useState9 = useState(tasks ? tasks.filter(function (t) {\n      return t.listId === id;\n    }) : []),\n    _useState10 = _slicedToArray(_useState9, 2),\n    taskList = _useState10[0],\n    setTaskList = _useState10[1];\n  var backgroundStyles = {\n    width: 300,\n    height: 300,\n    padding: 20,\n    paddingBottom: 10,\n    margin: 10,\n    borderWidth: 10,\n    borderColor: color,\n    borderRadius: 20,\n    backgroundColor: 'white'\n  };\n  var selectedStyle = {\n    width: 300,\n    height: 300,\n    margin: 10,\n    borderWidth: 10,\n    borderColor: color,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    opacity: 0.5\n  };\n  var addTask = function addTask(name, description) {\n    var newId = Math.max.apply(Math, _toConsumableArray(taskList.map(function (t) {\n      return t.id;\n    }))) + 1;\n    var updatedTasks = [].concat(_toConsumableArray(taskList), [{\n      id: newId,\n      name: name,\n      description: description,\n      isFinished: false,\n      lis: lis\n    }]);\n    console.log('data', name, description, boardId);\n    setLists(updatedLists);\n    setIsAddModalOpen(false);\n    console.log(lists);\n  };\n  var selectTask = function selectTask(name) {\n    var task = data.tasks.find(function (t) {\n      return t.name === name;\n    });\n    setSelectedTask(task);\n    setTaskName(name);\n  };\n  var handleDeleteList = function handleDeleteList(id) {\n    deleteList(id);\n    setIsDeleteList(true);\n  };\n  return _jsxs(View, {\n    style: listName === name ? selectedStyle : backgroundStyles,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return listName === name ? selectList('') : selectList(name);\n      },\n      children: _jsx(Text, {\n        style: styles.title,\n        children: name\n      })\n    }), _jsx(Toolbar, {\n      isTaskToolbar: true,\n      hasSelected: taskName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      },\n      onEdit: function onEdit() {\n        return setIsAddModalOpen(true);\n      },\n      onDelete: function onDelete() {\n        return setIsDeleteList(true);\n      },\n      style: styles.toolbar\n    }), _jsx(AddTaskModal, {\n      defaultTask: tasks,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      }\n    }), taskList.map(function (t) {\n      return _jsx(Task, _objectSpread(_objectSpread({}, t), {}, {\n        selectTask: selectTask,\n        taskName: taskName\n      }), t.id);\n    })]\n  });\n};\nList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  boardId: PropTypes.number,\n  listName: PropTypes.string.isRequired,\n  selectList: PropTypes.func.isRequired,\n  deleteList: PropTypes.func.isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    isFinished: PropTypes.string,\n    listId: PropTypes.number\n  })).isRequired\n};\nexport default List;","map":{"version":3,"names":["data","PropTypes","React","useState","Task","Text","TouchableOpacity","View","styles","Toolbar","AddTaskModal","jsx","_jsx","jsxs","_jsxs","List","_ref","id","name","color","boardId","listName","selectList","tasks","deleteList","_useState","_useState2","_slicedToArray","taskName","setTaskName","_useState3","_useState4","selectedTask","setSelectedTask","_useState5","_useState6","isAddModalOpen","setIsAddModalOpen","_useState7","_useState8","isDeleteList","setIsDeleteList","_useState9","filter","t","listId","_useState10","taskList","setTaskList","backgroundStyles","width","height","padding","paddingBottom","margin","borderWidth","borderColor","borderRadius","backgroundColor","selectedStyle","opacity","addTask","description","newId","Math","max","apply","_toConsumableArray","map","updatedTasks","concat","isFinished","lis","console","log","setLists","updatedLists","lists","selectTask","task","find","handleDeleteList","style","children","onPress","title","isTaskToolbar","hasSelected","onAdd","onEdit","onDelete","toolbar","defaultTask","isOpen","closeModal","_objectSpread","propTypes","number","string","isRequired","func","arrayOf","shape"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/List/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport Task from '../Task'\r\nimport { Text, TouchableOpacity, View } from 'react-native'\r\nimport styles from './styles'\r\nimport Toolbar from '../ToolBar'\r\nimport AddTaskModal from '../AddTaskModal'\r\n\r\nconst List = ({\r\n  id,\r\n  name,\r\n  color,\r\n  boardId,\r\n  listName,\r\n  selectList,\r\n  tasks,\r\n  deleteList\r\n}) => {\r\n  const [taskName, setTaskName] = useState('')\r\n  const [selectedTask, setSelectedTask] = useState([])\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n  const [isDeleteList, setIsDeleteList] = useState(false)\r\n  const [taskList, setTaskList] = useState(tasks ? tasks.filter(t => t.listId === id) : [])\r\n  const backgroundStyles = {\r\n    width: 300,\r\n    height: 300,\r\n    padding: 20,\r\n    paddingBottom: 10,\r\n    margin: 10,\r\n    borderWidth: 10,\r\n    borderColor: color,\r\n    borderRadius: 20,\r\n    backgroundColor: 'white'\r\n  }\r\n  const selectedStyle = {\r\n    width: 300,\r\n    height: 300,\r\n    margin: 10,\r\n    borderWidth: 10,\r\n    borderColor: color,\r\n    borderRadius: 20,\r\n    backgroundColor: 'white',\r\n    opacity: 0.5\r\n  }\r\n\r\n  const addTask = (name, description) => {\r\n    const newId = Math.max(...taskList.map(t => t.id)) + 1\r\n    const updatedTasks = [...taskList, {\r\n      id: newId,\r\n      name,\r\n      description,\r\n      isFinished: false,\r\n      lis\r\n    }]\r\n    console.log('data', name, description, boardId)\r\n    setLists(updatedLists)\r\n    setIsAddModalOpen(false)\r\n    console.log(lists)\r\n  }\r\n\r\n  const selectTask = name => {\r\n    const task = data.tasks.find(t => t.name === name)\r\n    setSelectedTask(task)\r\n    setTaskName(name)\r\n  }\r\n\r\n  const handleDeleteList = id => {\r\n    deleteList(id)\r\n    setIsDeleteList(true)\r\n  }\r\n\r\n  return (\r\n    <View style= { listName === name ? selectedStyle : backgroundStyles }>\r\n      <TouchableOpacity\r\n        onPress={() => listName === name ? selectList('') : selectList(name)}>\r\n        <Text style= { styles.title }>\r\n          { name }\r\n        </Text>\r\n      </TouchableOpacity>\r\n      <Toolbar\r\n        isTaskToolbar={true}\r\n        hasSelected={taskName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)}\r\n        onEdit={() => setIsAddModalOpen(true)}\r\n        onDelete={() => setIsDeleteList(true)}\r\n        style={ styles.toolbar }/>\r\n      <AddTaskModal\r\n        defaultTask={tasks}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}/>\r\n      {taskList.map(t => <Task key={t.id} {...t} selectTask={selectTask} taskName={taskName} />)}\r\n    </View>\r\n  )\r\n}\r\n\r\nList.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n  boardId: PropTypes.number,\r\n  listName: PropTypes.string.isRequired,\r\n  selectList: PropTypes.func.isRequired,\r\n  deleteList: PropTypes.func.isRequired,\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    isFinished: PropTypes.string,\r\n    listId: PropTypes.number\r\n  })).isRequired\r\n}\r\n\r\nexport default List\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}