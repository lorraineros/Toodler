{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport List from \"../../components/List\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddListModal from \"../../components/AddListModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardDetail = function BoardDetail(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    boardList = _route$params.boardList,\n    navigate = _route$params.navigate;\n  var _useState = useState(data.lists),\n    _useState2 = _slicedToArray(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedList = _useState4[0],\n    setSelectedList = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAddModalOpen = _useState6[0],\n    setIsAddModalOpen = _useState6[1];\n  var deleteList = function deleteList(listId) {\n    var updatedLists = lists.filter(function (list) {\n      return list.id !== listId;\n    });\n    setLists(updatedLists);\n  };\n  var onPress = function onPress(name) {\n    console.log(name);\n    var board = data.boards.find(function (b) {\n      return b.name === name;\n    });\n    console.log(board);\n    setSelectedList(board);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: selectedList.length > 0,\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      },\n      on: true\n    }), _jsx(AddListModal, {\n      defaultList: lists,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      }\n    }), boardList.map(function (t) {\n      return _jsx(List, _objectSpread(_objectSpread({}, t), {}, {\n        tasks: data.tasks,\n        navigate: navigate,\n        onPress: onPress\n      }), t.id);\n    })]\n  });\n};\nBoardDetail.navigationOptions = function (_) {\n  return {\n    title: 'BoardDetail'\n  };\n};\nBoardDetail.propTypes = {\n  route: PropTypes.object.isRequired\n};\nexport default BoardDetail;","map":{"version":3,"names":["data","PropTypes","React","useState","styles","List","View","Toolbar","AddListModal","jsx","_jsx","jsxs","_jsxs","BoardDetail","_ref","route","_route$params","params","boardList","navigate","_useState","lists","_useState2","_slicedToArray","setLists","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","isAddModalOpen","setIsAddModalOpen","deleteList","listId","updatedLists","filter","list","id","onPress","name","console","log","board","boards","find","b","style","container","children","hasSelected","length","onAdd","on","defaultList","isOpen","closeModal","map","t","_objectSpread","tasks","navigationOptions","_","title","propTypes","object","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/BoardView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport List from '../../components/List'\r\nimport { View } from 'react-native'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddListModal from '../../components/AddListModal'\r\n\r\nconst BoardDetail = ({ route }) => {\r\n  const { boardList, navigate } = route.params\r\n  const [lists, setLists] = useState(data.lists)\r\n  const [selectedList, setSelectedList] = useState([])\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const deleteList = (listId) => {\r\n    // Delete list logic\r\n    const updatedLists = lists.filter((list) => list.id !== listId)\r\n    setLists(updatedLists)\r\n  }\r\n\r\n  const onPress = name => {\r\n    console.log(name)\r\n    const board = data.boards.find(b => b.name === name)\r\n    console.log(board)\r\n    setSelectedList(board)\r\n  }\r\n\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Toolbar\r\n        hasSelected={selectedList.length > 0}\r\n        onAdd={() => setIsAddModalOpen(true)}\r\n        on />\r\n      <AddListModal\r\n        defaultList={lists}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}/>\r\n      {boardList.map(t => <List key={t.id} {...t} tasks={data.tasks} navigate={navigate} onPress={onPress}/>)}\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardDetail.navigationOptions = _ => ({\r\n  title: 'BoardDetail'\r\n})\r\n\r\nBoardDetail.propTypes = {\r\n  route: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BoardDetail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}