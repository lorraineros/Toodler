{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport Modal from \"../Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddTaskModal = function AddTaskModal(_ref) {\n  var isOpen = _ref.isOpen,\n    defaultTask = _ref.defaultTask,\n    submitModal = _ref.submitModal,\n    closeModal = _ref.closeModal;\n  var _useState = useState(defaultTask == null ? void 0 : defaultTask.name),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(defaultTask == null ? void 0 : defaultTask.description),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  return _jsx(Modal, {\n    isOpen: isOpen,\n    closeModal: closeModal,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \" Create new task \"\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Name \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Description \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), _jsxs(View, {\n        styleName: \"horizontal\",\n        style: styles.toolbar,\n        children: [_jsx(TouchableHighlight, {\n          style: styles.cancelButton,\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.submitButton,\n          onPress: submitModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })\n  });\n};\nAddTaskModal.propTypes = {\n  defaultTask: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    isFinished: PropTypes.bool.isRequired,\n    ListId: PropTypes.number.isRequired\n  }),\n  isOpen: PropTypes.bool.isRequired,\n  submitModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired\n};\nexport default AddTaskModal;","map":{"version":3,"names":["PropTypes","React","useState","styles","Modal","Text","TextInput","TouchableHighlight","View","jsx","_jsx","jsxs","_jsxs","AddTaskModal","_ref","isOpen","defaultTask","submitModal","closeModal","_useState","name","_useState2","_slicedToArray","setName","_useState3","description","_useState4","setDescription","children","style","title","paragraph","textInput","autoFocus","label","value","onChangeText","text","styleName","toolbar","cancelButton","onPress","buttonText","submitButton","propTypes","shape","string","isRequired","isFinished","bool","ListId","number","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/AddTaskModal/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport Modal from '../Modal'\r\nimport { Text, TextInput, TouchableHighlight, View } from 'react-native'\r\n\r\nconst AddTaskModal = ({\r\n  isOpen,\r\n  defaultTask,\r\n  submitModal,\r\n  closeModal\r\n}) => {\r\n  const [name, setName] = useState(defaultTask?.name)\r\n  const [description, setDescription] = useState(defaultTask?.description)\r\n\r\n  return (\r\n   <Modal\r\n   isOpen={isOpen}\r\n   closeModal={closeModal}>\r\n   <View>\r\n       <Text style={ styles.title }> Create new task </Text>\r\n       <Text style= { styles.paragraph }> Name </Text>\r\n       <TextInput\r\n         style= {styles.textInput }\r\n         autoFocus\r\n         label=\"Name\"\r\n         value={name}\r\n         onChangeText={text => setName(text)}\r\n       />\r\n       <Text style= { styles.paragraph }> Description </Text>\r\n       <TextInput\r\n         style= {styles.textInput }\r\n         autoFocus\r\n         label=\"Description\"\r\n         value={description}\r\n         onChangeText={text => setDescription(text)}\r\n       />\r\n       <View styleName=\"horizontal\" style={styles.toolbar}>\r\n         <TouchableHighlight style={ styles.cancelButton } onPress={closeModal}>\r\n           <Text style={ styles.buttonText }>Cancel</Text>\r\n         </TouchableHighlight>\r\n         <TouchableHighlight style={ styles.submitButton } onPress={submitModal}>\r\n            <Text style={ styles.buttonText }>Confirm</Text>\r\n          </TouchableHighlight>\r\n       </View>\r\n     </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nAddTaskModal.propTypes = {\r\n  defaultTask: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    isFinished: PropTypes.bool.isRequired,\r\n    ListId: PropTypes.number.isRequired\r\n  }),\r\n  isOpen: PropTypes.bool.isRequired,\r\n  submitModal: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTaskModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}