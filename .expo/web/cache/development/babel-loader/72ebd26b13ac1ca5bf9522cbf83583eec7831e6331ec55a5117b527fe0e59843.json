{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport List from \"../../components/List\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddListModal from \"../../components/AddListModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardDetail = function BoardDetail(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    boardList = _route$params.boardList,\n    navigate = _route$params.navigate;\n  var _useState = useState(data.lists),\n    _useState2 = _slicedToArray(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedList = _useState4[0],\n    setSelectedList = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listName = _useState6[0],\n    setListName = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var editList = function editList(id, name, color, boardId) {\n    if (selectedList) {\n      var updatedLists = lists.map(function (list) {\n        return list.id === id ? _objectSpread(_objectSpread({}, list), {}, {\n          name: name,\n          color: color,\n          boardId: boardId\n        }) : list;\n      });\n      setLists(updatedLists);\n      setIsAddModalOpen(false);\n      console.log();\n    }\n  };\n  var deleteList = function deleteList(listId) {\n    var updatedLists = lists.filter(function (list) {\n      return list.id !== listId;\n    });\n    setLists(updatedLists);\n  };\n  var selectList = function selectList(name) {\n    var list = data.lists.find(function (l) {\n      return l.name === name;\n    });\n    setSelectedList(list);\n    setListName(name);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: listName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      },\n      onEdit: function onEdit() {\n        return setIsAddModalOpen(true);\n      },\n      onRemove: function onRemove() {\n        return deleteList();\n      }\n    }), _jsx(AddListModal, {\n      defaultList: lists,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      },\n      submitModal: editList\n    }), boardList.map(function (t) {\n      return _jsx(List, _objectSpread(_objectSpread({}, t), {}, {\n        tasks: data.tasks,\n        navigate: navigate,\n        selectList: selectList,\n        listName: listName\n      }), t.id);\n    })]\n  });\n};\nBoardDetail.navigationOptions = function (_) {\n  return {\n    title: 'BoardDetail'\n  };\n};\nBoardDetail.propTypes = {\n  route: PropTypes.object.isRequired\n};\nexport default BoardDetail;","map":{"version":3,"names":["data","PropTypes","React","useState","styles","List","View","Toolbar","AddListModal","jsx","_jsx","jsxs","_jsxs","BoardDetail","_ref","route","_route$params","params","boardList","navigate","_useState","lists","_useState2","_slicedToArray","setLists","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","listName","setListName","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","editList","id","name","color","boardId","updatedLists","map","list","_objectSpread","console","log","deleteList","listId","filter","selectList","find","l","style","container","children","hasSelected","onAdd","onEdit","onRemove","defaultList","isOpen","closeModal","submitModal","t","tasks","navigationOptions","_","title","propTypes","object","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/BoardView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport List from '../../components/List'\r\nimport { View } from 'react-native'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddListModal from '../../components/AddListModal'\r\n\r\nconst BoardDetail = ({ route }) => {\r\n  const { boardList, navigate } = route.params\r\n  const [lists, setLists] = useState(data.lists)\r\n  const [selectedList, setSelectedList] = useState([])\r\n  const [listName, setListName] = useState('')\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const editList = (id, name, color, boardId) => {\r\n    if (selectedList) {\r\n      const updatedLists = lists.map((list) =>\r\n        list.id === id ? { ...list, name, color, boardId } : list\r\n      )\r\n      setLists(updatedLists)\r\n      setIsAddModalOpen(false)\r\n      console.log()\r\n    }\r\n  }\r\n\r\n  const deleteList = (listId) => {\r\n    // Delete list logic\r\n    const updatedLists = lists.filter((list) => list.id !== listId)\r\n    setLists(updatedLists)\r\n  }\r\n\r\n  const selectList = name => {\r\n    const list = data.lists.find(l => l.name === name)\r\n    setSelectedList(list)\r\n    setListName(name)\r\n  }\r\n\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Toolbar\r\n        hasSelected={listName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)}\r\n        onEdit={() => setIsAddModalOpen(true)}\r\n        onRemove={() => deleteList()} />\r\n      <AddListModal\r\n        defaultList={lists}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}\r\n        submitModal={editList}/>\r\n      {boardList.map(t => <List key={t.id} {...t} tasks={data.tasks} navigate={navigate} selectList={selectList} listName={listName}/>)}\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardDetail.navigationOptions = _ => ({\r\n  title: 'BoardDetail'\r\n})\r\n\r\nBoardDetail.propTypes = {\r\n  route: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BoardDetail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}