{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport styles from \"./styles\";\nimport List from \"../../components/List\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddListModal from \"../../components/AddListModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardDetail = function BoardDetail(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    boardList = _route$params.boardList,\n    setBoardList = _route$params.setBoardList,\n    navigate = _route$params.navigate;\n  var _useState = useState(data.lists),\n    _useState2 = _slicedToArray(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedList = _useState4[0],\n    setSelectedList = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listName = _useState6[0],\n    setListName = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var boardId = boardList[0].boardId;\n  useEffect(function () {\n    setBoardList(lists);\n  }, [lists]);\n  var addList = function addList(name, color) {\n    var id = Math.max.apply(Math, _toConsumableArray(lists.map(function (l) {\n      return l.id;\n    }))) + 1;\n    var updatedLists = [].concat(_toConsumableArray(lists), [{\n      id: id,\n      name: name,\n      color: color,\n      boardId: boardId\n    }]);\n    console.log('data', name, color, boardId);\n    setLists(updatedLists);\n    setIsAddModalOpen(false);\n    console.log(lists);\n  };\n  var editList = function editList(name, color) {\n    if (selectedList) {\n      var updatedLists = lists.map(function (list) {\n        return list.id === selectedList.id ? _objectSpread(_objectSpread({}, list), {}, {\n          name: name,\n          color: color\n        }) : list;\n      });\n      setLists(updatedLists);\n      setIsAddModalOpen(false);\n    }\n  };\n  var selectList = function selectList(name) {\n    var list = lists.find(function (l) {\n      return l.name === name;\n    });\n    setSelectedList(list);\n    setListName(name);\n  };\n  var deleteList = function deleteList(id) {\n    if (selectedList) {\n      setLists(function (prevList) {\n        var updatedList = prevList.filter(function (list) {\n          return list.id !== id;\n        });\n        console.log(updatedList);\n        return updatedList;\n      });\n      setIsDeleteList(false);\n    }\n  };\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Toolbar, {\n        hasSelected: listName !== '',\n        onAdd: function onAdd() {\n          return setIsAddModalOpen(true);\n        },\n        onEdit: function onEdit() {\n          return setIsAddModalOpen(true);\n        }\n      }), _jsx(AddListModal, {\n        defaultList: selectedList,\n        isOpen: isAddModalOpen,\n        closeModal: function closeModal() {\n          return setIsAddModalOpen(false);\n        },\n        submitModal: selectedList ? editList : addList\n      }), lists.map(function (t) {\n        return _jsx(List, _objectSpread(_objectSpread({}, t), {}, {\n          tasks: data.tasks,\n          navigate: navigate,\n          selectList: selectList,\n          listName: listName\n        }), t.id);\n      })]\n    })\n  });\n};\nBoardDetail.navigationOptions = function (_) {\n  return {\n    title: 'BoardDetail'\n  };\n};\nBoardDetail.propTypes = {\n  route: PropTypes.object.isRequired\n};\nexport default BoardDetail;","map":{"version":3,"names":["data","PropTypes","React","useEffect","useState","useFocusEffect","styles","List","ScrollView","View","Toolbar","AddListModal","jsx","_jsx","jsxs","_jsxs","BoardDetail","_ref","route","_route$params","params","boardList","setBoardList","navigate","_useState","lists","_useState2","_slicedToArray","setLists","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","listName","setListName","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","boardId","addList","name","color","id","Math","max","apply","_toConsumableArray","map","l","updatedLists","concat","console","log","editList","list","_objectSpread","selectList","find","deleteList","prevList","updatedList","filter","setIsDeleteList","children","style","container","hasSelected","onAdd","onEdit","defaultList","isOpen","closeModal","submitModal","t","tasks","navigationOptions","_","title","propTypes","object","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/BoardView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useFocusEffect } from '@react-navigation/native'\r\nimport styles from './styles'\r\nimport List from '../../components/List'\r\nimport { ScrollView, View } from 'react-native'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddListModal from '../../components/AddListModal'\r\n\r\nconst BoardDetail = ({ route }) => {\r\n  const { boardList, setBoardList, navigate } = route.params\r\n  const [lists, setLists] = useState(data.lists)\r\n  const [selectedList, setSelectedList] = useState()\r\n  const [listName, setListName] = useState('')\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n  const boardId = boardList[0].boardId\r\n  // const [isDeleteList, setIsDeletelist] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setBoardList(lists)\r\n  }, [lists])\r\n\r\n  const addList = (name, color) => {\r\n    const id = Math.max(...lists.map(l => l.id)) + 1\r\n    const updatedLists = [...lists, {\r\n      id,\r\n      name,\r\n      color,\r\n      boardId\r\n    }]\r\n    console.log('data', name, color, boardId)\r\n    setLists(updatedLists)\r\n    setIsAddModalOpen(false)\r\n    console.log(lists)\r\n  }\r\n\r\n  const editList = (name, color) => {\r\n    if (selectedList) {\r\n      const updatedLists = lists.map((list) =>\r\n        list.id === selectedList.id ? { ...list, name, color } : list\r\n      )\r\n      setLists(updatedLists)\r\n      setIsAddModalOpen(false)\r\n    }\r\n  }\r\n\r\n  const selectList = name => {\r\n    const list = lists.find(l => l.name === name)\r\n    setSelectedList(list)\r\n    setListName(name)\r\n  }\r\n\r\n  const deleteList = (id) => {\r\n    if (selectedList) {\r\n      setLists((prevList) => {\r\n        const updatedList = prevList.filter((list) => list.id !== id)\r\n        console.log(updatedList)\r\n        return updatedList\r\n        })\r\n      setIsDeleteList(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={ styles.container }>\r\n        <Toolbar\r\n          hasSelected={listName !== ''}\r\n          onAdd={() => setIsAddModalOpen(true)}\r\n          onEdit={() => setIsAddModalOpen(true)}\r\n          />\r\n        <AddListModal\r\n          defaultList={selectedList}\r\n          isOpen={isAddModalOpen}\r\n          closeModal={() => setIsAddModalOpen(false)}\r\n          submitModal={selectedList ? editList : addList}/>\r\n        {lists.map(t => <List key={t.id} {...t} tasks={data.tasks} navigate={navigate} selectList={selectList} listName={listName}/>)}\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nBoardDetail.navigationOptions = _ => ({\r\n  title: 'BoardDetail'\r\n})\r\n\r\nBoardDetail.propTypes = {\r\n  route: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BoardDetail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}