{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Board from \"../Board\";\nimport Toolbar from \"../ToolBar\";\nimport AddBoardModal from \"../AddBoardModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardList = function BoardList(_ref) {\n  var boards = _ref.boards,\n    navigate = _ref.navigate,\n    deleteBoard = _ref.deleteBoard;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedBoard = _useState2[0],\n    setSelectedBoard = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    boardName = _useState4[0],\n    setBoardName = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loadingBoard = _useState6[0],\n    setLoadingBoard = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  var addBoard = function addBoard(name, description, thumbnailPhoto) {\n    var id = Math.max.apply(Math, _toConsumableArray(boards.map(function (b) {\n      return b.id;\n    }))) + 1;\n    boards = [].concat(_toConsumableArray(boards), [{\n      id: id,\n      name: name,\n      description: description,\n      thumbnailPhoto: thumbnailPhoto\n    }]);\n    setIsAddModalOpen(false);\n    console.log(boards);\n  };\n  var selectBoard = function selectBoard(name) {\n    var board = data.boards.find(function (b) {\n      return b.name === name;\n    });\n    setSelectedBoard(board);\n    setBoardName(name);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: boardName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      }\n    }), _jsx(AddBoardModal, {\n      defaultBoard: boards,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      },\n      submitModal: addBoard\n    }), _jsx(View, {\n      style: styles.boards,\n      children: boards.map(function (b) {\n        return _jsxs(View, {\n          children: [_jsx(Board, _objectSpread(_objectSpread({}, b), {}, {\n            lists: data.lists,\n            boardName: boardName,\n            selectBoard: selectBoard,\n            navigate: navigate\n          })), _jsx(TouchableOpacity, {\n            style: styles.deleteButton,\n            onPress: function onPress() {\n              return deleteBoard(b.id);\n            },\n            children: _jsx(Text, {\n              style: styles.deleteButtonText,\n              children: \"Delete Board\"\n            })\n          })]\n        }, b.id);\n      })\n    })]\n  });\n};\nBoardList.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    thumbnailPhoto: PropTypes.string\n  })).isRequired,\n  navigate: PropTypes.func.isRequired,\n  deleteBoard: PropTypes.func.isRequired\n};\nexport default BoardList;","map":{"version":3,"names":["data","PropTypes","React","useState","styles","Text","TouchableOpacity","View","Board","Toolbar","AddBoardModal","jsx","_jsx","jsxs","_jsxs","BoardList","_ref","boards","navigate","deleteBoard","_useState","_useState2","_slicedToArray","selectedBoard","setSelectedBoard","_useState3","_useState4","boardName","setBoardName","_useState5","_useState6","loadingBoard","setLoadingBoard","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","addBoard","name","description","thumbnailPhoto","id","Math","max","apply","_toConsumableArray","map","b","concat","console","log","selectBoard","board","find","style","container","children","hasSelected","onAdd","defaultBoard","isOpen","closeModal","submitModal","_objectSpread","lists","deleteButton","onPress","deleteButtonText","propTypes","arrayOf","shape","number","string","isRequired","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/BoardList/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport { Text, TouchableOpacity, View } from 'react-native'\r\nimport Board from '../Board'\r\nimport Toolbar from '../ToolBar'\r\nimport AddBoardModal from '../AddBoardModal'\r\n\r\nconst BoardList = ({\r\n  boards,\r\n  navigate,\r\n  deleteBoard\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState()\r\n  const [boardName, setBoardName] = useState('')\r\n  const [loadingBoard, setLoadingBoard] = useState(true)\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  const addBoard = (name, description, thumbnailPhoto) => {\r\n    const id = Math.max(...boards.map(b => b.id)) + 1\r\n    boards = [...boards, {\r\n      id,\r\n      name,\r\n      description,\r\n      thumbnailPhoto\r\n    }]\r\n    setIsAddModalOpen(false)\r\n    console.log(boards)\r\n  }\r\n\r\n  const selectBoard = name => {\r\n    const board = data.boards.find(b => b.name === name)\r\n    setSelectedBoard(board)\r\n    setBoardName(name)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Toolbar\r\n        hasSelected={boardName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)} />\r\n      <AddBoardModal\r\n        defaultBoard={boards}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}\r\n        submitModal={addBoard}/>\r\n      <View style={styles.boards}>\r\n        {boards.map(b => (\r\n          <View key={b.id}>\r\n            <Board\r\n              {...b}\r\n              lists={data.lists}\r\n              boardName={boardName}\r\n              selectBoard={selectBoard}\r\n              navigate={navigate}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.deleteButton}\r\n              onPress={() => deleteBoard(b.id)}>\r\n              <Text style={styles.deleteButtonText}>Delete Board</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardList.propTypes = {\r\n  boards: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    thumbnailPhoto: PropTypes.string\r\n  })).isRequired,\r\n  navigate: PropTypes.func.isRequired,\r\n  deleteBoard: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardList\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}