{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from \"./styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Board from \"../Board\";\nimport Toolbar from \"../ToolBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardList = function BoardList(_ref) {\n  var boards = _ref.boards,\n    selectBoard = _ref.selectBoard,\n    boardName = _ref.boardName,\n    navigate = _ref.navigate;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toolbar, {\n      hasSelected: boardName !== '',\n      onAdd: function onAdd() {\n        return setIsAddModalOpen(true);\n      }\n    }), _jsx(AddBoardModal, {\n      defaultBoard: boards,\n      isOpen: isAddModalOpen,\n      closeModal: function closeModal() {\n        return setIsAddModalOpen(false);\n      },\n      submitModal: addBoard\n    }), boards.map(function (b) {\n      return _jsx(Board, _objectSpread(_objectSpread({}, b), {}, {\n        lists: data.lists,\n        boardName: boardName,\n        selectBoard: selectBoard,\n        navigate: navigate\n      }), b.id);\n    })]\n  });\n};\nBoardList.propTypes = {\n  boards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    thumbnailPhoto: PropTypes.string\n  })).isRequired,\n  boardName: PropTypes.string.isRequired,\n  selectBoard: PropTypes.func.isRequired,\n  navigate: PropTypes.func.isRequired\n};\nexport default BoardList;","map":{"version":3,"names":["data","PropTypes","React","styles","View","Board","Toolbar","jsx","_jsx","jsxs","_jsxs","BoardList","_ref","boards","selectBoard","boardName","navigate","style","container","children","hasSelected","onAdd","setIsAddModalOpen","AddBoardModal","defaultBoard","isOpen","isAddModalOpen","closeModal","submitModal","addBoard","map","b","_objectSpread","lists","id","propTypes","arrayOf","shape","number","name","string","isRequired","thumbnailPhoto","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/BoardList/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport styles from './styles'\r\nimport { View } from 'react-native'\r\nimport Board from '../Board'\r\nimport Toolbar from '../ToolBar'\r\n\r\nconst BoardList = ({\r\n  boards,\r\n  selectBoard,\r\n  boardName,\r\n  navigate\r\n}) => {\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Toolbar\r\n        hasSelected={boardName !== ''}\r\n        onAdd={() => setIsAddModalOpen(true)} />\r\n      <AddBoardModal\r\n        defaultBoard={boards}\r\n        isOpen={isAddModalOpen}\r\n        closeModal={() => setIsAddModalOpen(false)}\r\n        submitModal={addBoard}/>\r\n      {boards.map(b => <Board key={b.id} {...b} lists={data.lists} boardName={boardName} selectBoard={selectBoard} navigate={navigate}/>)}\r\n    </View>\r\n  )\r\n}\r\n\r\nBoardList.propTypes = {\r\n  boards: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n    thumbnailPhoto: PropTypes.string\r\n  })).isRequired,\r\n  boardName: PropTypes.string.isRequired,\r\n  selectBoard: PropTypes.func.isRequired,\r\n  navigate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BoardList\r\n"],"mappings":";;;AAAA,OAAOA,IAAI;AACX,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AAAgB,OAAAC,IAAA;AAE7B,OAAOC,KAAK;AACZ,OAAOC,OAAO;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAKT;EAAA,IAJJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,SAAS,GAAAH,IAAA,CAATG,SAAS;IACTC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;EAER,OACEN,KAAA,CAACN,IAAI;IAACa,KAAK,EAAGd,MAAM,CAACe,SAAW;IAAAC,QAAA,GAC9BX,IAAA,CAACF,OAAO;MACNc,WAAW,EAAEL,SAAS,KAAK,EAAG;MAC9BM,KAAK,EAAE,SAAAA,MAAA;QAAA,OAAMC,iBAAiB,CAAC,IAAI,CAAC;MAAA;IAAC,CAAE,CAAC,EAC1Cd,IAAA,CAACe,aAAa;MACZC,YAAY,EAAEX,MAAO;MACrBY,MAAM,EAAEC,cAAe;MACvBC,UAAU,EAAE,SAAAA,WAAA;QAAA,OAAML,iBAAiB,CAAC,KAAK,CAAC;MAAA,CAAC;MAC3CM,WAAW,EAAEC;IAAS,CAAC,CAAC,EACzBhB,MAAM,CAACiB,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAIvB,IAAA,CAACH,KAAK,EAAA2B,aAAA,CAAAA,aAAA,KAAgBD,CAAC;QAAEE,KAAK,EAAEjC,IAAI,CAACiC,KAAM;QAAClB,SAAS,EAAEA,SAAU;QAACD,WAAW,EAAEA,WAAY;QAACE,QAAQ,EAAEA;MAAS,IAAnGe,CAAC,CAACG,EAAkG,CAAC;IAAA,EAAC;EAAA,CAC/H,CAAC;AAEX,CAAC;AAEDvB,SAAS,CAACwB,SAAS,GAAG;EACpBtB,MAAM,EAAEZ,SAAS,CAACmC,OAAO,CAACnC,SAAS,CAACoC,KAAK,CAAC;IACxCH,EAAE,EAAEjC,SAAS,CAACqC,MAAM;IACpBC,IAAI,EAAEtC,SAAS,CAACuC,MAAM,CAACC,UAAU;IACjCC,cAAc,EAAEzC,SAAS,CAACuC;EAC5B,CAAC,CAAC,CAAC,CAACC,UAAU;EACd1B,SAAS,EAAEd,SAAS,CAACuC,MAAM,CAACC,UAAU;EACtC3B,WAAW,EAAEb,SAAS,CAAC0C,IAAI,CAACF,UAAU;EACtCzB,QAAQ,EAAEf,SAAS,CAAC0C,IAAI,CAACF;AAC3B,CAAC;AAED,eAAe9B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}