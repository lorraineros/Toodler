{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"../Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddBoardModal = function AddBoardModal(_ref) {\n  var isOpen = _ref.isOpen,\n    submitModal = _ref.submitModal,\n    closeModal = _ref.closeModal;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    thumbnailPhoto = _useState6[0],\n    setThumbnailPhoto = _useState6[1];\n  return _jsx(Modal, {\n    isOpen: isOpen,\n    closeModal: closeModal,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \" Create new board \"\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Name \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Description \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"Description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), _jsx(Text, {\n        style: styles.paragraph,\n        children: \" Thumbnail Photo \"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        autoFocus: true,\n        label: \"ThumbnailPhoto\",\n        value: thumbnailPhoto,\n        onChangeText: function onChangeText(text) {\n          return setThumbnailPhoto(text);\n        }\n      }), _jsxs(View, {\n        styleName: \"horizontal\",\n        style: styles.toolbar,\n        children: [_jsx(TouchableHighlight, {\n          style: styles.cancelButton,\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return submitModal(name, description, thumbnailPhoto);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })\n  });\n};\nAddBoardModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  submitModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired\n};\nexport default AddBoardModal;","map":{"version":3,"names":["PropTypes","React","useState","styles","Text","TextInput","View","TouchableHighlight","Modal","jsx","_jsx","jsxs","_jsxs","AddBoardModal","_ref","isOpen","submitModal","closeModal","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","description","setDescription","_useState5","_useState6","thumbnailPhoto","setThumbnailPhoto","children","style","title","paragraph","textInput","autoFocus","label","value","onChangeText","text","styleName","toolbar","cancelButton","onPress","buttonText","submitButton","propTypes","bool","isRequired","func"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/components/AddBoardModal/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport styles from './styles'\r\nimport { Text, TextInput, View, TouchableHighlight } from 'react-native'\r\nimport Modal from '../Modal'\r\n\r\nconst AddBoardModal = ({\r\n  isOpen,\r\n  submitModal,\r\n  closeModal\r\n}) => {\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [thumbnailPhoto, setThumbnailPhoto] = useState('')\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      closeModal={closeModal}>\r\n      <View>\r\n        <Text style={ styles.title }> Create new board </Text>\r\n        <Text style={ styles.paragraph }> Name </Text>\r\n        <TextInput\r\n          style={ styles.textInput }\r\n          autoFocus\r\n          label=\"Name\"\r\n          value={name}\r\n          onChangeText={text => setName(text)}\r\n        />\r\n        <Text style={ styles.paragraph }> Description </Text>\r\n        <TextInput\r\n          style={ styles.textInput }\r\n          autoFocus\r\n          label=\"Description\"\r\n          value={ description }\r\n          onChangeText={text => setDescription(text)}\r\n        />\r\n        <Text style={ styles.paragraph }> Thumbnail Photo </Text>\r\n        <TextInput\r\n          style={ styles.textInput }\r\n          autoFocus\r\n          label=\"ThumbnailPhoto\"\r\n          value={ thumbnailPhoto }\r\n          onChangeText={text => setThumbnailPhoto(text)}\r\n        />\r\n        <View styleName=\"horizontal\" style={styles.toolbar}>\r\n          <TouchableHighlight style={ styles.cancelButton } onPress={closeModal}>\r\n            <Text style={ styles.buttonText }>Cancel</Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight style={ styles.submitButton } onPress={() => submitModal(name, description, thumbnailPhoto)}>\r\n            <Text style={ styles.buttonText }>Confirm</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nAddBoardModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  submitModal: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddBoardModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}