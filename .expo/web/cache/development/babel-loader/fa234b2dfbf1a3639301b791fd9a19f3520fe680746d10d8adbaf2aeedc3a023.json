{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport data from \"../../resources/data.json\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport BoardList from \"../../components/BoardList\";\nimport Toolbar from \"../../components/ToolBar\";\nimport AddBoardModal from \"../../components/AddBoardModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var navigate = _ref.navigation.navigate;\n  var _useState = useState(data.boards || []),\n    _useState2 = _slicedToArray(_useState, 2),\n    boards = _useState2[0],\n    setBoards = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedBoard = _useState4[0],\n    setSelectedBoard = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    boardName = _useState6[0],\n    setBoardName = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAddModalOpen = _useState8[0],\n    setIsAddModalOpen = _useState8[1];\n  useEffect(function () {\n    setBoards(boards);\n  }, [boards]);\n  var addBoard = function addBoard(name, description, thumbnailPhoto) {\n    var id = Math.max.apply(Math, _toConsumableArray(boards.map(function (b) {\n      return b.id;\n    }))) + 1;\n    var updatedBoards = [].concat(_toConsumableArray(boards), [{\n      id: id,\n      name: name,\n      description: description,\n      thumbnailPhoto: thumbnailPhoto\n    }]);\n    setBoards(updatedBoards);\n    setIsAddModalOpen(false);\n  };\n  var editBoard = function editBoard(name, description, thumbnailPhoto) {\n    if (selectedBoard) {\n      var updatedBoards = boards.map(function (board) {\n        return board.id === selectedBoard.id ? _objectSpread(_objectSpread({}, board), {}, {\n          name: name,\n          description: description,\n          thumbnailPhoto: thumbnailPhoto\n        }) : board;\n      });\n      setBoards(updatedBoards);\n      setIsAddModalOpen(false);\n      setSelectedBoard(null);\n    }\n  };\n  var deleteBoard = function deleteBoard(boardId) {\n    var updatedBoards = boards.filter(function (board) {\n      return board.id !== boardId;\n    });\n    setBoards(updatedBoards);\n  };\n  var selectBoard = function selectBoard(name) {\n    var board = boards.find(function (b) {\n      return b.name === name;\n    });\n    setSelectedBoard(board);\n    setBoardName(name);\n  };\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Toolbar, {\n        hasSelected: boardName !== '',\n        onAdd: function onAdd() {\n          return setIsAddModalOpen(true);\n        },\n        onEdit: function onEdit() {\n          return setIsAddModalOpen(true);\n        }\n      }), _jsx(AddBoardModal, {\n        defaultBoard: selectedBoard,\n        isOpen: isAddModalOpen,\n        closeModal: function closeModal() {\n          return setIsAddModalOpen(false);\n        },\n        submitModal: selectedBoard ? editBoard : addBoard\n      }), _jsx(BoardList, {\n        navigate: navigate,\n        boards: boards,\n        deleteBoard: deleteBoard,\n        selectBoard: selectBoard,\n        boardName: boardName\n      })]\n    })\n  });\n};\nMain.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"names":["data","PropTypes","React","useEffect","useState","ScrollView","View","styles","BoardList","Toolbar","AddBoardModal","jsx","_jsx","jsxs","_jsxs","Main","_ref","navigate","navigation","_useState","boards","_useState2","_slicedToArray","setBoards","_useState3","_useState4","selectedBoard","setSelectedBoard","_useState5","_useState6","boardName","setBoardName","_useState7","_useState8","isAddModalOpen","setIsAddModalOpen","addBoard","name","description","thumbnailPhoto","id","Math","max","apply","_toConsumableArray","map","b","updatedBoards","concat","editBoard","board","_objectSpread","deleteBoard","boardId","filter","selectBoard","find","children","style","container","hasSelected","onAdd","onEdit","defaultBoard","isOpen","closeModal","submitModal","propTypes","shape","func","isRequired"],"sources":["C:/Users/lorra/Documents/GitHub/Toodler/src/views/MainView/index.js"],"sourcesContent":["import data from '../../resources/data.json'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ScrollView, View } from 'react-native'\r\nimport styles from './styles'\r\nimport BoardList from '../../components/BoardList'\r\nimport Toolbar from '../../components/ToolBar'\r\nimport AddBoardModal from '../../components/AddBoardModal'\r\n\r\nconst Main = ({ navigation: { navigate } }) => {\r\n  const [boards, setBoards] = useState(data.boards || [])\r\n  const [selectedBoard, setSelectedBoard] = useState()\r\n  const [boardName, setBoardName] = useState('')\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setBoards(boards)\r\n  }, [boards])\r\n\r\n  const addBoard = (name, description, thumbnailPhoto) => {\r\n    const id = Math.max(...boards.map(b => b.id)) + 1\r\n    const updatedBoards = [...boards, {\r\n      id,\r\n      name,\r\n      description,\r\n      thumbnailPhoto\r\n    }]\r\n    setBoards(updatedBoards)\r\n    setIsAddModalOpen(false)\r\n  }\r\n\r\n  const editBoard = (name, description, thumbnailPhoto) => {\r\n    if (selectedBoard) {\r\n      const updatedBoards = boards.map((board) =>\r\n        board.id === selectedBoard.id ? { ...board, name, description, thumbnailPhoto } : board\r\n      )\r\n      setBoards(updatedBoards)\r\n      setIsAddModalOpen(false)\r\n      setSelectedBoard(null)\r\n    }\r\n  }\r\n\r\n  const deleteBoard = (boardId) => {\r\n    // Delete board logic\r\n    const updatedBoards = boards.filter((board) => board.id !== boardId)\r\n    setBoards(updatedBoards)\r\n  }\r\n\r\n  const selectBoard = name => {\r\n    const board = boards.find(b => b.name === name)\r\n    setSelectedBoard(board)\r\n    setBoardName(name)\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        <Toolbar\r\n          hasSelected={boardName !== ''}\r\n          onAdd={() => setIsAddModalOpen(true)}\r\n          onEdit={() => setIsAddModalOpen(true)} />\r\n        <AddBoardModal\r\n          defaultBoard={selectedBoard}\r\n          isOpen={isAddModalOpen}\r\n          closeModal={() => setIsAddModalOpen(false)}\r\n          submitModal={selectedBoard ? editBoard : addBoard}/>\r\n        <BoardList navigate={navigate} boards={boards} deleteBoard={deleteBoard} selectBoard={selectBoard} boardName={boardName}/>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nMain.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}